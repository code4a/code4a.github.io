<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[蒋彦涛的个人博客]]></title>
  <subtitle><![CDATA[Code 4 Android / ...]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.code4a.com/"/>
  <updated>2018-02-01T12:02:43.684Z</updated>
  <id>http://www.code4a.com/</id>
  
  <author>
    <name><![CDATA[code4a]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[百度DuerOS Android平台接入流程]]></title>
    <link href="http://www.code4a.com/2018/01/31/dueros-android-import/"/>
    <id>http://www.code4a.com/2018/01/31/dueros-android-import/</id>
    <published>2018-01-31T09:00:23.000Z</published>
    <updated>2018-02-01T12:02:43.684Z</updated>
    <content type="html"><![CDATA[<h2 id="百度DuerOS接入让App更加智能">百度DuerOS接入让App更加智能</h2><blockquote>
<p>DuerOS开放平台是为企业及开发者提供的一整套对话式人工智能解决方案的开放平台</p>
</blockquote>
<h4 id="百度DuerOS开发平台官网地址">百度DuerOS开发平台<a href="http://open.duer.baidu.com/open" target="_blank" rel="external">官网地址</a></h4><blockquote>
<p>平台分为<a href="https://dueros.baidu.com/dbp" target="_blank" rel="external">技能开放平台</a>和<a href="http://open.duer.baidu.com/didp/main/index" target="_blank" rel="external">智能设备开放平台</a>具体的功能区别以及应用场景可查看网站介绍</p>
</blockquote>
<h3 id="注册成为开发者">注册成为开发者</h3><ol>
<li>如何你有百度账号，则使用百度账号进行<a href="https://passport.baidu.com/v2/?login&amp;u=https%3A%2F%2Fdueros.baidu.com%2Fdidp%2Fmain%2Findex" target="_blank" rel="external">登录</a>，如何没有账号，则需要先<a href="https://passport.baidu.com/v2/?reg&amp;tt=1517389947286&amp;overseas=&amp;gid=A8F49B7-66FC-4337-955E-DC518691EF04&amp;tpl=pp&amp;u=https%3A%2F%2Fdueros.baidu.com%2Fdidp%2Fmain%2Findex" target="_blank" rel="external">注册</a>百度账号</li>
<li><a href="https://dueros.baidu.com/didp/register/registerinfo" target="_blank" rel="external">进行开发者认证</a>开发者认证分为个人和企业开发者，需要的材料按照网页所需提供，审核材料需要经过两个工作日，审核通过就可以管理技能和设备两个控制台。</li>
</ol>
<h3 id="技能平台">技能平台</h3><ol>
<li>创建新技能</li>
</ol>
<blockquote>
<p>技能平台，包含自定义技能，智能家居技能，内容播报技能</p>
</blockquote>
<p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/dueros-android-import-skill1.png" alt="dueros-android-import-skill1.png"></p>
<ol>
<li>管理技能</li>
</ol>
<blockquote>
<p>可以在自己创建的技能上进行编辑/删除/查看技能ID</p>
</blockquote>
<ul>
<li>编辑技能</li>
</ul>
<blockquote>
<p>编辑技能页面可以查看技能的基础信息/交互模型/配置服务/模拟测试/发布上线/版本管理/技能数据功能，其中交互模型需要自己创建意图，定义字典，还可对其进行训练。</p>
</blockquote>
<p>交互模型的使用可以查看官方教程进行学习<a href="http://duer.bdstatic.com/saiya/flow/dbp-dst-multidialogue.mp4" target="_blank" rel="external">DST多轮对话</a></p>
<h3 id="设备平台(以下以Android设备为例)">设备平台(以下以Android设备为例)</h3><ol>
<li>配置新设备<ol>
<li>场景选择为<strong>手机</strong>点击下一步</li>
<li>操作系统选择为<strong>Android</strong>点击下一步</li>
<li>此时需要填写设备名称，点击申请<strong>ClientID</strong>，用于后续SDK接入鉴权使用。</li>
<li>端能力配置，可用于屏幕展示，语音输入输出的配置。点击下一步</li>
<li>云服务配置，可分为BOT配置，聊天人物肖像的配置，可以将语音机器人进行丰富。语音唤醒服务，自定义控制命令，此时需要提供三个dic文件，用于自定义命令的识别和识别后云平台指令的下发。</li>
<li><strong><a href="https://github.com/dueros/dcs-sdk-java" target="_blank" rel="external">SDK下载</a></strong></li>
</ol>
</li>
<li><p>SDK接入</p>
<p> SDK的配置可以参考<a href="https://github.com/dueros/dcs-sdk-java/blob/master/README.md" target="_blank" rel="external">DCS SDK（Java）开发者指南</a></p>
</li>
<li><p>接入SDK添加自定义功能。</p>
<ol>
<li><p>首先配置自己设备的云服务自定义控制命令，上传三个dic文件(intent.dic/dict.dic/command.dic)进行审核，需要五个工作日左右。</p>
<p>intent.dic意图文件将用户的语音命令上传到云平台之后拆分进行意图匹配下发命令</p>
<p> ai.dueros.device_interface.thirdparty.cmcc.smart_gateway Add [D:add][device][type][W:0-2]<br> ai.dueros.device_interface.thirdparty.cmcc.smart_gateway Remove [D:remove][device][type][W:0-2]<br> ai.dueros.device_interface.thirdparty.cmcc.smart_gateway Bind [D:bind][gateway][W:0-2]<br> ai.dueros.device_interface.thirdparty.cmcc.smart_gateway UnBind [D:unbind][gateway][W:0-2]</p>
<p>dict.dic词典文件将平台上用户的语音进行分解，解析出用户想要做出的指令</p>
<p> [D:add]<br> 添加<br> 增加<br> [D:remove]<br> 删除<br> 移除<br> [D:bind]<br> 绑定<br> [D:unbind]<br> 解绑<br> [D:device]<br> 温湿度<br> 水浸<br> 红外人感<br> 门磁<br> 燃气<br> 可燃气体<br> 烟雾感应<br> 声光<br> [D:gateway]<br> 普通网关<br> [D:type]<br> 传感器<br> 感应器</p>
<p>command.dic用户语言库，用来存储用户可能想要说出的完成控制命令语句</p>
<p> 添加烟雾感应感应器</p>
</li>
<li><p>修改SDK添加自定义的DeviceModule</p>
<p> <img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/dueros-android-import-sdk-devicemodule.png" alt="dueros-android-import-sdk-devicemodule.png"></p>
<ul>
<li><p>ApiConstants.java用来匹配自定义的控制命令意图，将用户的话拆分成控制关键词和命令语句</p>
<pre><code><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiConstants</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAMESPACE = <span class="string">"ai.dueros.device_interface.thirdparty.cmcc.smart_gateway"</span>;
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = <span class="string">"SmartGatewayInterface"</span>;

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Events</span> </span>{

    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Directives</span> </span>{
    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Add</span> </span>{
        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = Add.<span class="keyword">class</span>.getSimpleName();
    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Remove</span> </span>{
        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = Remove.<span class="keyword">class</span>.getSimpleName();
    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Bind</span> </span>{
        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = Bind.<span class="keyword">class</span>.getSimpleName();
    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">UnBind</span> </span>{
        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String NAME = UnBind.<span class="keyword">class</span>.getSimpleName();
    }
    }
}
</code></pre></li>
<li><p>*Payload.java用来接收用户的命令，这两个类需要在<code>framework.message</code>包下的<code>PayloadConfig.java</code>中进行插入，用来解析下发的<code>payload json</code>数据</p>
</li>
<li>SmartGatewayDeviceModule.java用来解析命令，并分发下去。</li>
<li>最后在<code>framework</code>包下的<code>DeviceModuleFactory.java</code>中创建添加我们的Module即可。</li>
</ul>
</li>
</ol>
</li>
</ol>
<h3 id="具体示例可以查看百度Dueros平台Demo">具体示例可以查看<a href="https://github.com/code4a/dcs-sdk-java-master" target="_blank" rel="external">百度Dueros平台Demo</a></h3>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="百度DuerOS接入让App更加智能">百度DuerOS接入让App更加智能</h2><blockquote>
<p>DuerOS开放平台是为企业及开发者提供的一整套对话式人工智能解决方案的开放平台</p>
</blockquote>
<h4 id="百度Duer]]>
    </summary>
    
      <category term="Android" scheme="http://www.code4a.com/tags/Android/"/>
    
      <category term="android" scheme="http://www.code4a.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[自建服务器证书]]></title>
    <link href="http://www.code4a.com/2017/12/26/creat-server-certificate/"/>
    <id>http://www.code4a.com/2017/12/26/creat-server-certificate/</id>
    <published>2017-12-26T08:41:22.000Z</published>
    <updated>2017-12-26T09:02:21.302Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="JavaWeb" scheme="http://www.code4a.com/tags/JavaWeb/"/>
    
      <category term="JavaWeb" scheme="http://www.code4a.com/categories/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Sublime Text Install Package Control]]></title>
    <link href="http://www.code4a.com/2017/11/22/sublime-text-install-package-control/"/>
    <id>http://www.code4a.com/2017/11/22/sublime-text-install-package-control/</id>
    <published>2017-11-22T04:47:31.000Z</published>
    <updated>2018-01-31T10:29:05.201Z</updated>
    <content type="html"><![CDATA[<h2 id="Sublime_Text_安装Package_Control">Sublime Text 安装Package Control</h2><p>输入如下命令</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.<span class="keyword">join</span>(ipp, pf), <span class="string">'wb'</span>).<span class="keyword">write</span>(urllib.request.urlopen( <span class="string">'http://sublime.wbond.net/'</span> + pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).<span class="keyword">read</span>())</span><br></pre></td></tr></table></figure>
<p>提示如下错误</p>
<figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error loading /Users/xxx/<span class="keyword">Library</span>/Application Support/Sublime Text <span class="number">3</span>/Installed Packages/<span class="keyword">Package</span> Control.sublime-<span class="keyword">package</span>: <span class="keyword">File</span> <span class="keyword">is</span> <span class="keyword">not</span> a zip <span class="keyword">file</span></span><br></pre></td></tr></table></figure>
<p>此时需要参考<a href="https://packagecontrol.io/installation" target="_blank" rel="external">Package Control</a>输入最新的安装命令即可解决该问题</p>
<ul>
<li>Sublime Text3</li>
</ul>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); <span class="keyword">by</span> = urllib.request.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.<span class="built_in">replace</span>(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(<span class="keyword">by</span>).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="built_in">open</span>(os.path.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(<span class="keyword">by</span>)</span><br></pre></td></tr></table></figure>
<ul>
<li>Sublime Text2</li>
</ul>
<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib2,os,hashlib; h = <span class="string">'6f4c264a24d933ce70df5dedcf1dcaee'</span> + <span class="string">'ebe013ee18cced0ef93d5f746d80ef60'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> <span class="operator">not</span> os.path.exists(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); <span class="keyword">by</span> = urllib2.urlopen( <span class="string">'http://packagecontrol.io/'</span> + pf.<span class="built_in">replace</span>(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(<span class="keyword">by</span>).hexdigest(); <span class="built_in">open</span>( os.path.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(<span class="keyword">by</span>) <span class="keyword">if</span> dh == h <span class="keyword">else</span> None; print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Sublime_Text_安装Package_Control">Sublime Text 安装Package Control</h2><p>输入如下命令</p>
<figure class="highlight gradle"><table><tr><td cla]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vim常用命令记录]]></title>
    <link href="http://www.code4a.com/2017/11/04/Vim-Command-Used-Record/"/>
    <id>http://www.code4a.com/2017/11/04/Vim-Command-Used-Record/</id>
    <published>2017-11-04T02:24:24.000Z</published>
    <updated>2017-11-04T05:01:28.708Z</updated>
    <content type="html"><![CDATA[<h2 id="Vim常用命令">Vim常用命令</h2><blockquote>
<p>一直在使用<code>Vim</code>编辑文件但是也只是略懂皮毛，只会使用一些简单地命令，操作编辑文件。为了熟练的使用<code>Vim</code>，在使用<code>Vim</code>编辑这篇文章的同时，也进行一些命令的练习和记录，方便以后更加高效的编辑文件。</p>
</blockquote>
<h5 id="vi编辑器支持编辑模式和命令模式，编辑模式下可以完成文本的编辑功能，命令模式下可以完成对文件的操作命令，要正确使用vi编辑器就必须熟练掌握两种模式的切换。默认情况下，打开vi编辑器后自动进入命令模式。从编辑模式切换到命令模式使用esc键，从命令模式切换到编辑模式使用A,a,O,o,I,i键。">vi编辑器支持<em>编辑模式</em>和<em>命令模式</em>，<em>编辑模式</em>下可以完成文本的编辑功能，<em>命令模式</em>下可以完成对文件的操作命令，要正确使用vi编辑器就必须熟练掌握两种模式的切换。默认情况下，打开vi编辑器后自动进入<em>命令模式</em>。从<em>编辑模式</em>切换到<em>命令模式</em>使用<code>esc</code>键，从<em>命令模式</em>切换到<em>编辑模式</em>使用<code>A</code>,<code>a</code>,<code>O</code>,<code>o</code>,<code>I</code>,<code>i</code>键。</h5><hr>
<h3 id="命令模式下">命令模式下</h3><ul>
<li><h5 id="游标操作">游标操作</h5></li>
</ul>
<table>
<thead>
<tr>
<th>按键</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td> h</td>
<td>游标向左移动</td>
</tr>
<tr>
<td> j</td>
<td>游标向下移动</td>
</tr>
<tr>
<td> k</td>
<td>游标向上移动</td>
</tr>
<tr>
<td> l</td>
<td>游标向右移动</td>
</tr>
<tr>
<td> w</td>
<td>向前移动一个单词</td>
</tr>
<tr>
<td> b</td>
<td>向后移动一个单词</td>
</tr>
<tr>
<td> e</td>
<td>向前移动一个单词，且游标指向单词的末尾</td>
</tr>
<tr>
<td> (</td>
<td>移动当前句子的首部</td>
</tr>
<tr>
<td> )</td>
<td>移动下一个句子的首部</td>
</tr>
<tr>
<td> {</td>
<td>移动当前段的首部</td>
</tr>
<tr>
<td> }</td>
<td>移动下一段的首部</td>
</tr>
<tr>
<td> [[</td>
<td>移到当前区段的首部</td>
</tr>
<tr>
<td> ]]</td>
<td>移到下一个区段的首部</td>
</tr>
<tr>
<td> 0</td>
<td>移到当前行的首部</td>
</tr>
<tr>
<td> $</td>
<td>移到当前行的尾部</td>
</tr>
<tr>
<td> ^</td>
<td>移到当前行第一个非空白字符的地方</td>
</tr>
<tr>
<td> <code>+</code> or RETURN</td>
<td>移动到下一行的第一个字符</td>
</tr>
<tr>
<td> <code>-</code></td>
<td>移动到上一行的第一个字符</td>
</tr>
<tr>
<td> /text</td>
<td>向下搜索text</td>
</tr>
<tr>
<td> ?text</td>
<td>向上搜索text</td>
</tr>
</tbody>
</table>
<ul>
<li><h5 id="切换编辑模式">切换编辑模式</h5></li>
</ul>
<table>
<thead>
<tr>
<th>按键</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td> A</td>
<td>当前行的尾部追加内容</td>
</tr>
<tr>
<td> i</td>
<td>游标前插入内容</td>
</tr>
<tr>
<td> I</td>
<td>游标后插入内容</td>
</tr>
<tr>
<td> o</td>
<td>在鼠标所在行的下面添加内容</td>
</tr>
<tr>
<td> O</td>
<td>在鼠标所在行的上面添加内容</td>
</tr>
<tr>
<td> cw</td>
<td>删除游标所在的字符，然后进入编辑模式</td>
</tr>
<tr>
<td> cc</td>
<td>删除游标所在的行，然后进入编辑模式</td>
</tr>
<tr>
<td> C</td>
<td>删除从游标所在的位置到行尾的字符，然后进入编辑模式</td>
</tr>
</tbody>
</table>
<ul>
<li><h5 id="内容编辑">内容编辑</h5></li>
</ul>
<table>
<thead>
<tr>
<th>按键</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td> dd</td>
<td>删除当前行</td>
</tr>
<tr>
<td> ndd</td>
<td>删除第n行</td>
</tr>
<tr>
<td> D</td>
<td>删除当前行游标所在的位置后面的字符</td>
</tr>
<tr>
<td> d}</td>
<td>删除当前段剩余的字符</td>
</tr>
<tr>
<td> d^</td>
<td>删除游标前到行首的字符</td>
</tr>
<tr>
<td> dL</td>
<td>删除从游标到屏幕的最后一行之间的内容</td>
</tr>
<tr>
<td> dG</td>
<td>删除从游标到文件末尾之间的内容</td>
</tr>
<tr>
<td> u</td>
<td>撤销最后的改变</td>
</tr>
<tr>
<td> U</td>
<td>还原当前行的内容</td>
</tr>
<tr>
<td> x</td>
<td>向后删除游标所在位置的字符</td>
</tr>
<tr>
<td> X</td>
<td>向前删除游标前面的字符</td>
</tr>
<tr>
<td> nX</td>
<td>删除前面的n个字符，游标所在的字符将不会被删</td>
</tr>
<tr>
<td> .</td>
<td>还原最后的改变</td>
</tr>
</tbody>
</table>
<ul>
<li><h5 id="文件操作">文件操作</h5></li>
</ul>
<table>
<thead>
<tr>
<th>按键</th>
<th>操作</th>
</tr>
</thead>
<tbody>
<tr>
<td> :w</td>
<td>写文件</td>
</tr>
<tr>
<td> :w!</td>
<td>写文件，忽略警告信息</td>
</tr>
<tr>
<td> :w! file</td>
<td>覆盖文件，忽略警告信息</td>
</tr>
<tr>
<td> :wq</td>
<td>写文件之后退出编辑</td>
</tr>
<tr>
<td> :q</td>
<td>退出编辑器</td>
</tr>
<tr>
<td> :q!</td>
<td>强制退出编辑器</td>
</tr>
<tr>
<td> :w file</td>
<td>把文件的内容写到另一个文件</td>
</tr>
<tr>
<td> ZZ</td>
<td>退出编辑器，如果文件有改动，则保存再退出</td>
</tr>
<tr>
<td> :x</td>
<td>退出编辑器，如果文件有改动，则保存再退出</td>
</tr>
<tr>
<td> :n1,n2w file</td>
<td>把n1行到n2行间的内容写到文件file</td>
</tr>
<tr>
<td> :n1,n2w &gt;&gt; file</td>
<td>把n1行到n2行间的内容追加到文件file</td>
</tr>
<tr>
<td> :e file2</td>
<td>在当前文件的命令行模式下编辑file2</td>
</tr>
<tr>
<td> :e!</td>
<td>重新从磁盘加载文件</td>
</tr>
<tr>
<td> :e#</td>
<td>交替编辑文件</td>
</tr>
<tr>
<td> :n</td>
<td>编辑地下一行</td>
</tr>
<tr>
<td> :n!</td>
<td>编辑地下一行（忽略警告）</td>
</tr>
<tr>
<td> :r file</td>
<td>在游标后面插入文件</td>
</tr>
<tr>
<td> :r !command</td>
<td>在当前行的后面，插入运行命令后的输出内容</td>
</tr>
<tr>
<td> :set number</td>
<td>最左端显示行号</td>
</tr>
<tr>
<td> :set nonumber</td>
<td>最左端隐藏行号</td>
</tr>
</tbody>
</table>
<hr>
<h3 id="编辑模式">编辑模式</h3><blockquote>
<p>该模式下就是文件的常规编写，输入任意字符进行编辑</p>
</blockquote>
<ul>
<li><h5 id="切换命令模式">切换命令模式</h5></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">按键</th>
<th style="text-align:center">操作</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">esc</td>
<td style="text-align:center">切换为命令模式</td>
</tr>
</tbody>
</table>
<h5 id="上述命令可进行命令模式下的文件操作">上述命令可进行命令模式下的文件操作</h5><h2 id="致谢">致谢</h2><p><a href="http://man.linuxde.net/vi" target="_blank" rel="external">vi命令</a><br><a href="http://www.cnblogs.com/junw_china/articles/1708967.html" target="_blank" rel="external">常用vi编辑器命令行</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Vim常用命令">Vim常用命令</h2><blockquote>
<p>一直在使用<code>Vim</code>编辑文件但是也只是略懂皮毛，只会使用一些简单地命令，操作编辑文件。为了熟练的使用<code>Vim</code>，在使用<code>Vim</cod]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[iTerm2语法高亮配置]]></title>
    <link href="http://www.code4a.com/2017/11/04/iTerm2-Command-highlighter/"/>
    <id>http://www.code4a.com/2017/11/04/iTerm2-Command-highlighter/</id>
    <published>2017-11-04T02:00:58.000Z</published>
    <updated>2017-11-04T02:18:29.024Z</updated>
    <content type="html"><![CDATA[<h2 id="iTerm2_语法高亮">iTerm2 语法高亮</h2><h5 id="假如你没有配置过iTerm2可以参考Mac_下_iTerm2的安装及配置完成其安装和配置">假如你没有配置过<code>iTerm2</code>可以参考<a href="http://www.code4a.com/2017/10/24/iTerm2-install-configuration/">Mac 下 iTerm2的安装及配置</a>完成其安装和配置</h5><blockquote>
<p>安装完<code>iTerm2</code>发现之前配置过得命令都找不到了，像<code>brew</code>,<code>npm</code>等命令，此时只需要更新一下<code>.bash_profile</code>文件即可</p>
</blockquote>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 打开配置文件</span></span><br><span class="line">sudo vi <span class="class">.bash_profile</span></span><br><span class="line"><span class="comment">// 添加如下路径，保存退出</span></span><br><span class="line">export PATH=/usr/local/bin:<span class="variable">$PATH</span></span><br><span class="line"><span class="comment">// 更新配置</span></span><br><span class="line">source ~/.bash_profile</span><br></pre></td></tr></table></figure>
<h3 id="语法高亮配置">语法高亮配置</h3><ol>
<li>使用homebrew安装 zsh-syntax-highlighting 插件。</li>
</ol>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span>install zsh-syntax-highlighting</span><br></pre></td></tr></table></figure>
<ol>
<li>配置.zshrc文件，插入一行。</li>
</ol>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/usr/</span>local<span class="regexp">/share/</span>zsh-syntax-highlighting<span class="regexp">/zsh-syntax-highlighting.zsh</span></span><br></pre></td></tr></table></figure>
<ol>
<li>更新配置</li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="iTerm2_语法高亮">iTerm2 语法高亮</h2><h5 id="假如你没有配置过iTerm2可以参考Mac_下_iTerm2的安装及配置完成其安装和配置">假如你没有配置过<code>iTerm2</code>可以参考<a href="http://ww]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[zsh: command not found: gradle/adb/..]]></title>
    <link href="http://www.code4a.com/2017/11/02/zsh-command-not-found-cmd/"/>
    <id>http://www.code4a.com/2017/11/02/zsh-command-not-found-cmd/</id>
    <published>2017-11-02T12:17:31.000Z</published>
    <updated>2017-11-04T02:02:36.179Z</updated>
    <content type="html"><![CDATA[<h2 id="iTerm2下命令找不到"><code>iTerm2</code>下命令找不到</h2><blockquote>
<p>由于前段时间更新了命令行工具，导致这两天在<code>Android Studio</code>的命令行下找不到<code>adb</code>命令和<code>gradle</code>命令。因为<code>Android Studio</code>的命令行使用的就是默认的命令行工具，导致之前对<code>bash</code>的配置不生效。</p>
</blockquote>
<h5 id="如果你出现同样的问题可以参考Mac下command_not_found:gradle/adb终极解决方案这篇文章，可以很好地解决这个问题！">如果你出现同样的问题可以参考<a href="http://blog.csdn.net/u010358168/article/details/61924807" target="_blank" rel="external">Mac下command not found:gradle/adb终极解决方案</a>这篇文章，可以很好地解决这个问题！</h5><h2 id="zsh:_permission_denied:_-/gradlew">zsh: permission denied: ./gradlew</h2><h5 id="在使用命令gradlew提交代码到jCenter时出现zsh:_permission_denied:_-/gradlew，第一反应是权限不够，然后再前边添加了sudo命令提高权限，紧接着又出现sudo:_-/gradlew:_command_not_found的提示，然后再网上搜索了一下原来是gradlew没有执行权限，因为之前在Terminal终端工具中是经常用的命令，换了iTerm2之后就忘记了是否之前添加过执行权限，真是好记性不如烂笔头，何况我这记性还不好。记录一下这种情况以及所需命令">在使用命令<code>gradlew</code>提交代码到<code>jCenter</code>时出现<code>zsh: permission denied: ./gradlew</code>，第一反应是权限不够，然后再前边添加了<code>sudo</code>命令提高权限，紧接着又出现<code>sudo: ./gradlew: command not found</code>的提示，然后再网上搜索了一下原来是<code>gradlew</code>没有执行权限，因为之前在<code>Terminal</code>终端工具中是经常用的命令，换了<code>iTerm2</code>之后就忘记了是否之前添加过执行权限，真是好记性不如烂笔头，何况我这记性还不好。记录一下这种情况以及所需命令</h5><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">chmod</span> +<span class="keyword">x</span> gradlew</span><br></pre></td></tr></table></figure>
<h4 id="为gradlew增加可执行权限">为<code>gradlew</code>增加可执行权限</h4><h2 id="发布代码到jCenter">发布代码到jCenter</h2><h5 id="然后再执行发布到jCenter的命令，如果你也是使用的bintray-release的配置，可以使用以下命令。">然后再执行发布到<a href="https://bintray.com/code4a" target="_blank" rel="external">jCenter</a>的命令，如果你也是使用的<a href="https://github.com/novoda/bintray-release" target="_blank" rel="external">bintray-release</a>的配置，可以使用以下命令。</h5><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew clean <span class="keyword">build </span><span class="keyword">bintrayUpload </span>-PbintrayUser<span class="label">=BINTRAY_USERNAME</span> -PbintrayKey<span class="label">=BINTRAY_KEY</span> -PdryRun<span class="label">=false</span></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="iTerm2下命令找不到"><code>iTerm2</code>下命令找不到</h2><blockquote>
<p>由于前段时间更新了命令行工具，导致这两天在<code>Android Studio</code>的命令行下找不到<code>adb</code>]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Centos7系统安装配置]]></title>
    <link href="http://www.code4a.com/2017/10/27/centos7-install-config/"/>
    <id>http://www.code4a.com/2017/10/27/centos7-install-config/</id>
    <published>2017-10-27T09:58:21.000Z</published>
    <updated>2017-10-27T10:55:41.243Z</updated>
    <content type="html"><![CDATA[<h2 id="Centos_7_Mini安装配置过程">Centos 7 Mini安装配置过程</h2><blockquote>
<p>由于工作的需要，出差到外地，需要部署局域网的服务器环境，方便这边环境的测试，安装过程也是几经波折，最终还是将环境部署成功，然后记录一下安装的过程。避免以后安装踩到一些未知的坑。</p>
</blockquote>
<h3 id="Centos7_镜像下载">Centos7 镜像下载</h3><ul>
<li>请前往<a href="https://www.centos.org/download/" target="_blank" rel="external">Centos官网的下载页面</a>选择<code>DVD ISO</code>按钮，在我的<code>Mac</code>环境下就是直接启动了迅雷进行下载了，如果没有会进入到二级界面，此时请选择相应的镜像地址进行下载系统镜像</li>
</ul>
<h3 id="制作U盘启动盘">制作U盘启动盘</h3><ul>
<li>U盘启动盘制作可以参考<a href="https://jingyan.baidu.com/article/49711c614d0971fa451b7c59.html" target="_blank" rel="external">这里</a>。 镜像也不需要拷贝到U盘里。我制作的时候有一步不太一样就是在写入之前，点击了<strong>便捷启动</strong> 引导选择 <code>linux</code> 的字样，然后选择写入。后边和链接里类似。</li>
</ul>
<h3 id="U盘引导进入安装Centos_7">U盘引导进入安装Centos 7</h3><ol>
<li>如果你安装之前这台主机已经预装了<code>windows</code>系统，需用通过硬盘工具将整个磁盘删除，我当时是用另外一个<code>WinPE</code>的U盘引导进入，通过磁盘工具删除整个盘符，方便在后续安装中<code>Centos</code>安装程序能够识别硬盘。如果你的盘符已经删除或者是<code>Centos</code>可以识别的类型可以忽略这一步。</li>
<li>进入<code>Centos</code>引导界面，具体的可以参考<a href="http://www.linuxidc.com/Linux/2016-07/133646.htm" target="_blank" rel="external">这个链接</a> 的第二步</li>
</ol>
<h3 id="安装配置Centos_7">安装配置Centos 7</h3><ul>
<li>具体的安装配置过程可以参考<a href="http://www.111cn.net/sys/CentOS/63645.htm" target="_blank" rel="external">CentOS 7.0系统安装配置步骤详解
</a></li>
</ul>
<h5 id="为了big够大，选择安装的都是命令行的系统，命令行大神可以忽略后边的废话。为了配置方便此时需要在自己的个人笔记本上安装XShell工具进行远程连接，进行环境部署，环境部署的过程中可以需要网Centos上拷贝文件，此时还需要安装XFtp工具进行文件的拷贝。后续的数据库操作也需要在电脑上安装数据库操作的客户端Navicat。">为了big够大，选择安装的都是命令行的系统，命令行大神可以忽略后边的废话。为了配置方便此时需要在自己的个人笔记本上安装<code>XShell</code>工具进行远程连接，进行环境部署，环境部署的过程中可以需要网<code>Centos</code>上拷贝文件，此时还需要安装<code>XFtp</code>工具进行文件的拷贝。后续的数据库操作也需要在电脑上安装数据库操作的客户端<code>Navicat</code>。</h5><h5 id="在数据库远程登录的过程中，如果出现_2003_#_10060_的错误时，可能就是Centos的防火墙未允许远程连接，此时需要修改防火墙配置文件，具体可参考远程连接linux下的mysql_Err1045_Err2003解决办法。">在数据库远程登录的过程中，如果出现 2003 # 10060 的错误时，可能就是<code>Centos</code>的防火墙未允许远程连接，此时需要修改防火墙配置文件，具体可参考<a href="http://www.cnblogs.com/K4Creative/p/5631516.html" target="_blank" rel="external">远程连接linux下的mysql Err1045 Err2003解决办法</a>。</h5><h3 id="以上推荐的链接都是在安装过程中搜索大量帖子之后筛选的最终解决问题的链接。以上链接可能符合个人的操作习惯，或者能解决某些问题。希望能有帮助。">以上推荐的链接都是在安装过程中搜索大量帖子之后筛选的最终解决问题的链接。以上链接可能符合个人的操作习惯，或者能解决某些问题。希望能有帮助。</h3>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Centos_7_Mini安装配置过程">Centos 7 Mini安装配置过程</h2><blockquote>
<p>由于工作的需要，出差到外地，需要部署局域网的服务器环境，方便这边环境的测试，安装过程也是几经波折，最终还是将环境部署成功，然后记录一下安装的过]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac 下 iTerm2的安装及配置]]></title>
    <link href="http://www.code4a.com/2017/10/24/iTerm2-install-configuration/"/>
    <id>http://www.code4a.com/2017/10/24/iTerm2-install-configuration/</id>
    <published>2017-10-24T05:43:46.000Z</published>
    <updated>2017-10-24T06:28:03.620Z</updated>
    <content type="html"><![CDATA[<h2 id="Mac下安装iTerm2以及配色方案">Mac下安装iTerm2以及配色方案</h2><blockquote>
<p>工欲善其事，必先利其器</p>
</blockquote>
<p>在好友博客中看到了一个终端工具iTerm2的使用及配色方案，感觉这个工具程序呈现的外观看着很舒服，所以自己也参照他的方案进行了配置，然后在网上搜索到这个工具同时也可以修改Vim的配色，所以就想流程记录了一下，方便日后再次部署是查看。</p>
<h3 id="iTerm2安装和配色">iTerm2安装和配色</h3><p>参考效果图：<br><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/iTerm2-previews.png" alt="iTerm2效果图"></p>
<p>具体步骤可参考<a href="http://audiebant.site/" target="_blank" rel="external">audiebantzhan</a>的<a href="http://audiebant.site/2016/01/11/iterm2-themes/" target="_blank" rel="external">这篇博文</a>可以解决在安装过程中遇到的问题。</p>
<h3 id="iTerm2_Vim配色">iTerm2 Vim配色</h3><p>参考效果图：<br><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/iTerm2-Vim-previews.png" alt="iTerm2-Vim效果图"></p>
<p>在第一步中配置工具颜色的时候，会下载到最流行的配色解决方案<a href="http://ethanschoonover.com/solarized" target="_blank" rel="external">Solarized</a>，Vim 的配色最好和终端的配色保持一致，不然有可能会觉得很别扭，能接受的可以除外。具体流程如下：</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">cd</span> solarized</span><br><span class="line">$ <span class="keyword">cd</span> <span class="keyword">vim</span>-colors-solarized/colors</span><br><span class="line">$ <span class="built_in">mkdir</span> -<span class="keyword">p</span> ~/.<span class="keyword">vim</span>/colors</span><br><span class="line">$ <span class="keyword">cp</span> solarized.<span class="keyword">vim</span> ~/.<span class="keyword">vim</span>/colors/</span><br></pre></td></tr></table></figure>
<p>然后需要编辑配置文件</p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">vi</span> ~/.vimrc</span><br><span class="line"><span class="keyword">syntax</span> enable</span><br><span class="line"><span class="keyword">set</span> background=dark</span><br><span class="line"><span class="keyword">colorscheme</span> solarized</span><br></pre></td></tr></table></figure>
<p>关闭重新打开Vim 就可以看到效果</p>
<h3 id="致谢及内容出处">致谢及内容出处</h3><p><a href="http://audiebant.site/2016/01/11/iterm2-themes/" target="_blank" rel="external">iTerm2 Configuration</a><br><a href="http://www.cnblogs.com/gslyyq/p/5251331.html" target="_blank" rel="external">Mac vim iterm2配色方案</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Mac下安装iTerm2以及配色方案">Mac下安装iTerm2以及配色方案</h2><blockquote>
<p>工欲善其事，必先利其器</p>
</blockquote>
<p>在好友博客中看到了一个终端工具iTerm2的使用及配色方案，感觉这个工具程序呈现]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Beyond Compare for Mac 无限试用方法]]></title>
    <link href="http://www.code4a.com/2017/10/23/beyond-compare-for-mac-install-free-use/"/>
    <id>http://www.code4a.com/2017/10/23/beyond-compare-for-mac-install-free-use/</id>
    <published>2017-10-23T04:37:44.000Z</published>
    <updated>2017-10-23T09:51:41.062Z</updated>
    <content type="html"><![CDATA[<h2 id="Beyond_Compare_For_Mac">Beyond Compare For Mac</h2><h3 id="Beyond_Compare_下载试用原理">Beyond Compare 下载试用原理</h3><h4 id="在Beyond_Compare官网下载最新的_Beyond_Compare">在<a href="http://www.scootersoftware.com/download.php" target="_blank" rel="external">Beyond Compare官网</a>下载最新的 Beyond Compare</h4><h5 id="解压后,_把_Beyond_Compare_复制到应用程序中，选中图标，右键点击“显示包内容”，逐步进入_Beyond_Compare_应用程序的_MacOS_目录下(/Applications/Beyond_Compare-app/Contents/MacOS)">解压后, 把 <code>Beyond Compare</code> 复制到应用程序中，选中图标，右键点击“显示包内容”，逐步进入 <code>Beyond Compare</code> 应用程序的 <code>MacOS</code> 目录下(<code>/Applications/Beyond Compare.app/Contents/MacOS</code>)</h5><h5 id="原理：">原理：</h5><p><code>BCompare</code> 是应用程序启动的程序. 只要在启动的时候删除 <code>registry.dat</code> (<code>Library/Application Support/Beyond Compare/registry.dat</code>)注册信息就好了.<br>为此可以在该目录下添加一个批处理文件用来处理这个操作.</p>
<h5 id="具体操作如下:">具体操作如下:</h5><ol>
<li>将主启动程序 <code>BCompare</code> 重命名为 <code>BCompare.real</code></li>
<li><p>在同级目录下新建一个脚本文件,命名为 <code>BCompare</code>,这样 <code>BCompare</code> 在启动的时候就会执行该脚本文件,注意记得 <code>chmod a+x BCompare</code></p>
<ul>
<li><p>使用文本编辑工具(如：<code>Sublime Text</code>)新建一个文件，在里面写如下代码，第一行是注明解释器，第二行是删除注册信息，第三行是启动真正的主程序。</p>
  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="shebang">#!/bin/bash</span></span><br><span class="line">rm <span class="string">"/Users/<span class="variable">$(whoami)</span>/Library/Application Support/Beyond Compare/registry.dat"</span></span><br><span class="line"><span class="string">"`dirname "</span><span class="variable">$0</span><span class="string">"`"</span>/BCompare.real <span class="variable">$@</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>然后保存文件到名称为<code>BCompare.sh</code>到<code>Beyond Compare</code> 应用程序的 <code>MacOS</code> 目录下(<code>/Applications/Beyond Compare.app/Contents/MacOS</code>)</p>
</li>
<li>重新打开该文件查看是否有多余内容，如果有删除掉，保存关闭软件，然后选中该文件<code>Command + i</code>显示文件简介，去掉<code>.sh</code>后缀</li>
<li><p>最后在终端使用 cd 命令进入 <code>MacOS</code> 目录，执行 <code>chmod a+x BCompare</code></p>
  <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> /Applications/Beyond\ <span class="keyword">Compare</span>.<span class="keyword">app</span>/Contents/MacOS/</span><br><span class="line">chmod a+x BCompare</span><br></pre></td></tr></table></figure>
</li>
<li><p>这样我们每次打开软件的时候，都会先自动删掉注册信息，也就是永久免费试用了</p>
</li>
</ul>
</li>
</ol>
<h2 id="参考致谢">参考致谢</h2><p><a href="http://www.seidea.com/" target="_blank" rel="external">Seidea</a>的<a href="http://www.seidea.com/2017/03/23/beyond-compare-for-mac-%E6%97%A0%E9%99%90%E8%AF%95%E7%94%A8%E6%96%B9%E6%B3%95/" target="_blank" rel="external">Beyond Compare for Mac 无限试用方法</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Beyond_Compare_For_Mac">Beyond Compare For Mac</h2><h3 id="Beyond_Compare_下载试用原理">Beyond Compare 下载试用原理</h3><h4 id="在Beyond_Compare官]]>
    </summary>
    
      <category term="tools" scheme="http://www.code4a.com/tags/tools/"/>
    
      <category term="Tools" scheme="http://www.code4a.com/categories/Tools/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[创建hexo新文章笔记]]></title>
    <link href="http://www.code4a.com/2017/10/23/create-new-blog-method/"/>
    <id>http://www.code4a.com/2017/10/23/create-new-blog-method/</id>
    <published>2017-10-23T02:50:55.000Z</published>
    <updated>2017-10-23T09:51:34.398Z</updated>
    <content type="html"><![CDATA[<h2 id="创建我的新文章">创建我的新文章</h2><blockquote>
<p>好记性不如烂笔头，好长时间不更新博客了，连更新的流程和方法都忘记了，所以时下记得很清楚的东西，还是要用文本记录下来，方便日后忘记再次查看！</p>
</blockquote>
<h3 id="命令行进入到blog文件夹根目录">命令行进入到blog文件夹根目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> 自己的路径/blog/</span><br></pre></td></tr></table></figure>
<h3 id="通过hexo命令创建新博文">通过hexo命令创建新博文</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo <span class="keyword">new</span> <span class="string">"博文名称"</span> <span class="comment"><span class="markdown">/<span class="strong">** 创建新的博文 **</span>/</span></span></span><br><span class="line"><span class="comment">// 或者</span></span><br><span class="line">hexo <span class="keyword">new</span> post <span class="string">"博文名称"</span></span><br></pre></td></tr></table></figure>
<h3 id="编辑博文">编辑博文</h3><p>通过上边的代码会将新的博文创建在<code>source/_posts/</code> 的文件夹下，然后进入到<code>路径/blog/source/_posts</code>目录下，找到刚刚创建的“博文名称.md”使用 <code>markdown</code>工具进行编辑博客内容。不知道<code>markdow</code>格式的可以参考<a href="http://www.appinn.com/markdown/" target="_blank" rel="external">Markdown语法说明</a>对比书写自己的博文</p>
<h3 id="编辑生成静态博客">编辑生成静态博客</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">// 或者</span><br><span class="line">hexo generate /<span class="keyword">*</span><span class="keyword">*</span> 生成一套静态网页 <span class="keyword">*</span><span class="keyword">*</span>/</span><br></pre></td></tr></table></figure>
<p>生成的博客内容就在当前路径的 <code>public</code>目录下</p>
<h3 id="本地预览完整博客内容">本地预览完整博客内容</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br><span class="line">// 或者</span><br><span class="line">hexo server /<span class="keyword">*</span><span class="keyword">*</span> 在本地建立 Server ，提供访问和浏览 <span class="keyword">*</span><span class="keyword">*</span>/</span><br></pre></td></tr></table></figure>
<p>浏览器访问地址 <code>http://0.0.0.0:4000/</code></p>
<h3 id="上传到github">上传到github</h3><p>可以通过github desktop提交变更到github仓库，等待一会编译通过，新的文章就更新进去了</p>
<p>也可以通过命令行进行提交。<br>使用BCompare 对比两个目录的差异，进行更新<br>然后通过命令行进行提交</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment">// # 将所有修改过的工作文件提交暂存区</span></span><br><span class="line">git commit -m “the commit message<span class="string">"</span></span><br><span class="line">git push origin master <span class="preprocessor"># 将本地主分支推到远程主分支</span></span><br></pre></td></tr></table></figure>
<h3 id="参考">参考</h3><p>更多详细的配置内容可以参考以下链接<br><a href="http://blog.fens.me/hexo-blog-github/" target="_blank" rel="external">Hexo在github上构建免费的Web应用</a><br><a href="https://ninghao.net/blog/1412" target="_blank" rel="external">使用 Hexo 生成一套静态博客网页</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="创建我的新文章">创建我的新文章</h2><blockquote>
<p>好记性不如烂笔头，好长时间不更新博客了，连更新的流程和方法都忘记了，所以时下记得很清楚的东西，还是要用文本记录下来，方便日后忘记再次查看！</p>
</blockquote>
<h3 id=]]>
    </summary>
    
      <category term="hexo" scheme="http://www.code4a.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://www.code4a.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RxJava Study two]]></title>
    <link href="http://www.code4a.com/2016/03/16/RxJava-Study-two/"/>
    <id>http://www.code4a.com/2016/03/16/RxJava-Study-two/</id>
    <published>2016-03-16T08:05:53.000Z</published>
    <updated>2017-10-23T09:50:31.688Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
      <category term="RxJava" scheme="http://www.code4a.com/tags/RxJava/"/>
    
      <category term="RxJava" scheme="http://www.code4a.com/categories/RxJava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用NanoHTTPD在Android上建立本地服务器]]></title>
    <link href="http://www.code4a.com/2016/03/11/NanoHTTPD-Simple-Use/"/>
    <id>http://www.code4a.com/2016/03/11/NanoHTTPD-Simple-Use/</id>
    <published>2016-03-11T10:22:51.000Z</published>
    <updated>2017-10-23T09:59:02.299Z</updated>
    <content type="html"><![CDATA[<h2 id="使用NanoHTTPD在Android上建立本地服务器">使用NanoHTTPD在Android上建立本地服务器</h2><blockquote>
<p>因为项目需求，需要在Android端的Service上实现一个简单的服务器，方便客户端发送Http请求，完成对应的自动化流程，<br>通过查阅相关资料，最终决定采用NanoHTTPD</p>
</blockquote>
<ul>
<li><h4 id="NanoHTTPD项目地址"><a href="https://github.com/NanoHttpd/nanohttpd" target="_blank" rel="external">NanoHTTPD项目地址</a></h4></li>
</ul>
<p>在 <strong><a href="https://github.com/NanoHttpd/nanohttpd/releases" target="_blank" rel="external">releases</a></strong> 界面下载nanohttpd-2.2.0.jar导入eclipse的工程中，因为目前的项目是迭代早期的项目，而且也并未往Android Studio上迁移，在AS上的依赖可以参考项目的  <strong><a href="https://github.com/NanoHttpd/nanohttpd/blob/master/README.md" target="_blank" rel="external">Readme</a></strong> 进行配置</p>
<p>使用起来非常的简单，服务端的代码实现如下：</p>
<h4 id="1-_单独的类集成NanoHTTPD">1. 单独的类集成NanoHTTPD</h4><pre><code><span class="keyword">package</span> com.cmcc.receiver.transfer;

<span class="keyword">import</span> java.util.<span class="keyword">HashMap</span>;
<span class="keyword">import</span> java.util.Map;
<span class="keyword">import</span> java.util.Set;

<span class="keyword">import</span> android.os.Handler;
<span class="keyword">import</span> android.os.Message;
<span class="keyword">import</span> android.<span class="built_in">text</span>.TextUtils;
<span class="keyword">import</span> android.util.Log;

<span class="keyword">import</span> com.cmcc.receiver.consts.Constants;

<span class="keyword">import</span> fi.iki.elonen.NanoHTTPD;

<span class="keyword">public</span> class WiMoTransferServer extends NanoHTTPD {

  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">int</span> DEFAULT_SERVER_PORT = <span class="number">8080</span>;
  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> TAG = WiMoTransferServer.class.getSimpleName();

  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> NOTHING = <span class="string">"/favicon.ico"</span>;

  <span class="comment">// ip:8080/cmd=set_interent&amp;target_ssid=WiMO-<span class="label">xxxx&amp;password=12345678</span></span>
  <span class="comment">// cmd=set_interent&amp;target_ssid=netgear54&amp;password=11111111</span>

  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> REQUEST_ROOT = <span class="string">"/"</span>;

  <span class="keyword">private</span> Handler mHander;

  <span class="keyword">public</span> WiMoTransferServer(Handler mHandler) {
      <span class="keyword">super</span>(DEFAULT_SERVER_PORT);
      <span class="keyword">this</span>.mHander = mHandler;
  }

  @Override
  <span class="keyword">public</span> Response serve(IHTTPSession session) {
      <span class="comment">// TODO Auto-generated method stub</span>
      Log.i(TAG, <span class="string">"IHTTPSession : -&gt; "</span> + session.getMethod() + <span class="string">" , uri : -&gt; "</span> + session.getUri());
      Response response = <span class="keyword">super</span>.serve(session);
      <span class="keyword">String</span> uriStr = session.getUri();
      <span class="keyword">switch</span> (session.getMethod()) {
      <span class="keyword">case</span> GET:
          <span class="keyword">if</span> (NOTHING.equals(uriStr) || REQUEST_ROOT.equals(uriStr)) {
              Log.i(TAG, <span class="string">"request url = "</span> + NOTHING);
              response = response404(session, uriStr);
          } <span class="keyword">else</span> <span class="keyword">if</span> (!TextUtils.isEmpty(uriStr) &amp;&amp; uriStr.contains(Constants.EQUAL)) {
              Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; paramsMap = parseURLRequest(uriStr);
              checkParamsResult(paramsMap);
              <span class="keyword">String</span> cmdResult = paramsMap.<span class="built_in">get</span>(Constants.CMD);
              Log.i(TAG, <span class="string">" cmdResult -&gt; "</span> + cmdResult);
              <span class="keyword">if</span> (!TextUtils.isEmpty(cmdResult) &amp;&amp; Constants.SETINTERNET.equals(cmdResult)) {
                  <span class="keyword">String</span> targetSSID = paramsMap.<span class="built_in">get</span>(Constants.TARGETSSID);
                  <span class="keyword">String</span> pwd = paramsMap.<span class="built_in">get</span>(Constants.PWD);
                  Log.i(TAG, <span class="string">"targetSSID = "</span> + targetSSID + <span class="string">" ,password = "</span> + pwd);
                  Message msg = mHander.obtainMessage(Constants.MSG_CONNECT_TARGET_AP);
                  msg.obj = targetSSID + Constants.SPLIT + pwd;
                  mHander.sendMessage(msg);
              }
              response = responseSuccess();
          }

          <span class="comment">// default:</span>
          <span class="comment">// Log.i(TAG, "request method is not GET");</span>
          <span class="comment">// response = response404(session, uriStr);</span>
          <span class="comment">// break;</span>
      }
      <span class="keyword">return</span> response;
  }

  <span class="keyword">public</span> <span class="keyword">void</span> checkParamsResult(Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; paramsMap) {
      Set&lt;<span class="keyword">String</span>&gt; keySet = paramsMap.keySet();
      <span class="keyword">for</span> (<span class="keyword">String</span> <span class="variable">key</span> : keySet) {
          <span class="keyword">String</span> value = paramsMap.<span class="built_in">get</span>(<span class="variable">key</span>);
          Log.i(TAG, <span class="string">"params_Key: -&gt; "</span> + <span class="variable">key</span> + <span class="string">" ,params_Value: -&gt; "</span> + value);
      }
  }

  <span class="comment">/**
   * 解析出url参数中的键值对 如
   * "ip:8080/cmd=set_interent&amp;target_ssid=WiMO-xxxx&amp;password=12345678"，
   * 解析出cmd:set_interent,target_ssid:WiMO-xxxx,password:12345678存入map中
   *
   * @param URL
   *            url地址
   * @return url请求参数部分
   */</span>
  <span class="keyword">public</span> Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; parseURLRequest(<span class="keyword">String</span> URL) {
      Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; mapRequest = <span class="keyword">new</span> <span class="keyword">HashMap</span>&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt;();

      <span class="keyword">String</span>[] arrSplit = <span class="keyword">null</span>;

      <span class="keyword">String</span> strUrlParam = truncateUrlPage(URL);
      <span class="keyword">if</span> (strUrlParam == <span class="keyword">null</span>) {
          <span class="keyword">return</span> mapRequest;
      }
      <span class="comment">// 每个键值为一组</span>
      arrSplit = strUrlParam.<span class="built_in">split</span>(<span class="string">"[&amp;]"</span>);
      <span class="keyword">for</span> (<span class="keyword">String</span> strSplit : arrSplit) {
          <span class="keyword">String</span>[] arrSplitEqual = <span class="keyword">null</span>;
          arrSplitEqual = strSplit.<span class="built_in">split</span>(<span class="string">"[=]"</span>);

          <span class="comment">// 解析出键值</span>
          <span class="keyword">if</span> (arrSplitEqual.length &gt; <span class="number">1</span>) {
              <span class="comment">// 正确解析</span>
              mapRequest.put(arrSplitEqual[<span class="number">0</span>], arrSplitEqual[<span class="number">1</span>]);

          } <span class="keyword">else</span> {
              <span class="keyword">if</span> (arrSplitEqual[<span class="number">0</span>] != <span class="string">""</span>) {
                  <span class="comment">// 只有参数没有值，不加入</span>
                  mapRequest.put(arrSplitEqual[<span class="number">0</span>], <span class="string">""</span>);
              }
          }
      }
      <span class="keyword">return</span> mapRequest;
  }

  <span class="comment">/**
   * 去掉url中的路径，留下请求参数部分
   *
   * @param strURL
   *            url地址
   * @return url请求参数部分
   */</span>
  <span class="keyword">public</span> <span class="keyword">String</span> truncateUrlPage(<span class="keyword">String</span> strURL) {
      <span class="keyword">String</span> strAllParam = <span class="keyword">null</span>;
      <span class="keyword">String</span>[] arrSplit = <span class="keyword">null</span>;

      strURL = strURL.<span class="built_in">trim</span>().toLowerCase();

      <span class="keyword">if</span> (strURL.contains(<span class="string">"[?]"</span>)) {
          arrSplit = strURL.<span class="built_in">split</span>(<span class="string">"[?]"</span>);
          <span class="keyword">if</span> (strURL.length() &gt; <span class="number">1</span>) {
              <span class="keyword">if</span> (arrSplit.length &gt; <span class="number">1</span>) {
                  <span class="keyword">if</span> (arrSplit[<span class="number">1</span>] != <span class="keyword">null</span>) {
                      strAllParam = arrSplit[<span class="number">1</span>];
                  }
              }
          }
      } <span class="keyword">else</span> <span class="keyword">if</span> (strURL.startsWith(REQUEST_ROOT)) {
          strAllParam = strURL.substring(strURL.indexOf(REQUEST_ROOT) + <span class="number">1</span>);
          Log.i(TAG, <span class="string">" strAllParam substring result : -&gt; "</span> + strAllParam);
      } <span class="keyword">else</span> {
          strAllParam = strURL;
      }

      <span class="keyword">return</span> strAllParam;
  }

  <span class="keyword">public</span> Response responseSuccess() {
      StringBuilder builder = <span class="keyword">new</span> StringBuilder();
      builder.<span class="built_in">append</span>(<span class="string">"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;"</span>);
      builder.<span class="built_in">append</span>(<span class="string">"Success!"</span>);
      builder.<span class="built_in">append</span>(<span class="string">"&lt;/body&gt;&lt;/html&gt;\n"</span>);
      <span class="keyword">return</span> newFixedLengthResponse(builder.toString());
  }

  <span class="keyword">public</span> Response response404(IHTTPSession session, <span class="keyword">String</span> url) {
      StringBuilder builder = <span class="keyword">new</span> StringBuilder();
      builder.<span class="built_in">append</span>(<span class="string">"&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;"</span>);
      builder.<span class="built_in">append</span>(<span class="string">"Sorry, Can't Found "</span> + url + <span class="string">" !"</span>);
      builder.<span class="built_in">append</span>(<span class="string">"&lt;/body&gt;&lt;/html&gt;\n"</span>);
      <span class="keyword">return</span> newFixedLengthResponse(builder.toString());
  }
}
</code></pre><h4 id="2-_在service中初始化WiMoTransferServer对象">2. 在service中初始化WiMoTransferServer对象</h4><pre><code><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">initWebServer</span><span class="params">()</span> </span>{
    mWiMoTransferServer = <span class="keyword">new</span> WiMoTransferServer(mHandler);
    <span class="keyword">try</span> {
        mWiMoTransferServer.start();
    } <span class="keyword">catch</span> (IOException e) {
        e.printStackTrace();
    }
}
</code></pre><p>  在需要初始化server的地方调用该方法，在需要停止服务的地方调用</p>
<pre><code>mWiMoTransferServer.<span class="literal">stop</span>();
</code></pre><h4 id="3-_然后再客户端中通过http请求发送到该服务的ip地址，然后再做详细的处理和响应">3. 然后再客户端中通过http请求发送到该服务的ip地址，然后再做详细的处理和响应</h4>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="使用NanoHTTPD在Android上建立本地服务器">使用NanoHTTPD在Android上建立本地服务器</h2><blockquote>
<p>因为项目需求，需要在Android端的Service上实现一个简单的服务器，方便客户端发送Http请求，完成对]]>
    </summary>
    
      <category term="NanoHTTPD-Android" scheme="http://www.code4a.com/tags/NanoHTTPD-Android/"/>
    
      <category term="android" scheme="http://www.code4a.com/categories/android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[RxJava学习笔记(一)]]></title>
    <link href="http://www.code4a.com/2016/03/10/RxJava-Study-first/"/>
    <id>http://www.code4a.com/2016/03/10/RxJava-Study-first/</id>
    <published>2016-03-10T15:31:02.000Z</published>
    <updated>2017-10-23T09:50:44.776Z</updated>
    <content type="html"><![CDATA[<blockquote>
<p>由于目前工作比较安逸，成了温水青蛙，长期以往的惰性，导致了好多新知识还停留在听过的阶段，作为一个软件工程师来说，这是致命的缺点.<br>为了重拾原有的拼劲和热情，所以自己决定做出改变，就以当下比较流程的RxJava的学习去转变！丰富自己技能的同时，也养成坚持写博客的习惯！</p>
</blockquote>
<ul>
<li><p><strong><a href="https://github.com/ReactiveX/RxJava" target="_blank" rel="external">RxJava项目地址</a></strong></p>
</li>
<li><p>关于RxJava的简介和优点可以参考</p>
</li>
<li><p><strong><a href="http://mrfu.me/android/2015/11/11/Getting_Started_with_RxJava_and_Android/" target="_blank" rel="external">RxJava 入门</a></strong></p>
</li>
</ul>
<h3 id="1-准备工作">1.准备工作</h3><blockquote>
<p>工欲善其事，必先利其器</p>
</blockquote>
<p>  a.首先打开Android Studio创建项目，然后根据RxJava的Readme中描述在AS中的使用方法</p>
<p>  Example for Gradle:</p>
<pre><code><span class="keyword">compile</span> <span class="string">'io.reactivex:rxjava:x.y.z'</span>
</code></pre><p>  b.然后再项目的Module的根目录<code>build.gradle</code>文件中添加项目依赖，查看Github中Release分支中看到的RxJava版本为1.1.1, 所以最终添加的内容</p>
<pre><code><span class="keyword">compile</span> <span class="string">'io.reactivex:rxjava:1.1.1'</span>
</code></pre><p>  然后点击上边的出现的 <code>Sync Now</code> 等待依赖下载完成，即准备工作完成</p>
<h3 id="2-牛刀小试">2.牛刀小试</h3><blockquote>
<p>敲码百变，其义自现</p>
</blockquote>
<p>  a.Hello Wrold</p>
<ul>
<li><p>先创建Observable</p>
<pre><code>rx.Observable&lt;String&gt; myObservable = rx.Observable.create(
      new rx.Observable.OnSubscribe&lt;String&gt;() {
          <span class="variable">@Override</span>
          public void call(rx.Subscriber&lt;? super String&gt; <span class="sub"><span class="keyword">sub</span>) {</span>
              <span class="sub"><span class="keyword">sub</span>.onNext("Hello, world!");</span>
              <span class="sub"><span class="keyword">sub</span>.onCompleted();</span>
          }
      }
);
</code></pre></li>
<li><p>Observable发送“Hello,world!”消息然后完成。接着创建Subscriber来消费这个数据：</p>
<pre><code><span class="literal">rx</span><span class="built_in">.</span>Subscriber&lt;<span class="built_in">String</span>&gt; mySubscriber = <span class="literal">new</span> <span class="literal">rx</span><span class="built_in">.</span>Subscriber&lt;<span class="built_in">String</span>&gt;() {
    @Override
    <span class="keyword">public</span> <span class="literal">void</span> onNext(<span class="built_in">String</span> s) {
        <span class="keyword">Log</span><span class="built_in">.</span>i(<span class="built_in">TAG</span>, <span class="string">" s -&gt; "</span> + s);
    }

    @Override
    <span class="keyword">public</span> <span class="literal">void</span> onCompleted() {
        <span class="keyword">Log</span><span class="built_in">.</span>i(<span class="built_in">TAG</span>, <span class="string">" onCompleted() "</span>);
    }

    @Override
    <span class="keyword">public</span> <span class="literal">void</span> onErr<span class="subst">or</span>(Throwable e) {
    }
};
</code></pre></li>
<li><p>上面代码所做的工作就是打印由Observable发送的字符串。现在我们有了myObservable和mySubscriber，就可以通过subscribe()函数把两者关联起来：</p>
<pre><code><span class="tag">myObservable</span><span class="class">.subscribe</span>(<span class="tag">mySubscriber</span>);
</code></pre></li>
<li><p>当订阅完成，myObservable将调用subscriber的onNext()和onComplete()函数，最终mySubscriber打印“Hello, world!”然后终止。</p>
<pre><code><span class="number">03</span>-<span class="number">10</span> <span class="number">11</span>:<span class="number">55</span>:<span class="number">42.784</span> <span class="number">4249</span>-<span class="number">4249</span>/com.code4a I/HiddenTitleActivity:  s -&gt; Hello, world!
<span class="number">03</span>-<span class="number">10</span> <span class="number">11</span>:<span class="number">55</span>:<span class="number">42.784</span> <span class="number">4249</span>-<span class="number">4249</span>/com.code4a I/HiddenTitleActivity:  onCompleted() 
</code></pre></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<blockquote>
<p>由于目前工作比较安逸，成了温水青蛙，长期以往的惰性，导致了好多新知识还停留在听过的阶段，作为一个软件工程师来说，这是致命的缺点.<br>为了重拾原有的拼劲和热情，所以自己决定做出改变，就以当下比较流程的RxJava的学习去转变！丰富自己技能的同时，]]>
    </summary>
    
      <category term="RxJava" scheme="http://www.code4a.com/tags/RxJava/"/>
    
      <category term="RxJava" scheme="http://www.code4a.com/categories/RxJava/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Better Java(一)]]></title>
    <link href="http://www.code4a.com/2015/11/16/better-java/"/>
    <id>http://www.code4a.com/2015/11/16/better-java/</id>
    <published>2015-11-16T13:04:04.000Z</published>
    <updated>2017-10-23T10:49:06.894Z</updated>
    <content type="html"><![CDATA[<h2 id="教你编写现代化的java程式">教你编写现代化的java程式</h2><blockquote>
<p>Java是目前世界上最流行的编程语言之一，自从java8正式发布之后，原有的编程习惯方式发生了一些转变。</p>
</blockquote>
<h3 id="Style(样式)"><strong>Style(样式)</strong></h3><ul>
<li>传统而言，java是习惯以冗长的javaBean方式定义某个数据对象，新的样式可能会更清晰和保证准确性</li>
</ul>
<h4 id="Structs(结构体)">Structs(结构体)</h4><ul>
<li><h5 id="常规用法">常规用法</h5><pre><code><span class="keyword">public</span> class DataBean {

  <span class="keyword">private</span> <span class="built_in">String</span> <span class="built_in">data</span>;

  <span class="keyword">public</span> DataBean(){};

  <span class="keyword">public</span> <span class="literal">void</span> setData(<span class="built_in">String</span> <span class="built_in">data</span>){
    this<span class="built_in">.</span><span class="built_in">data</span> = <span class="built_in">data</span>;
  }

  <span class="keyword">public</span> <span class="built_in">String</span> getData(){
    <span class="keyword">return</span> this<span class="built_in">.</span><span class="built_in">data</span>;
  }
}
</code></pre></li>
<li><h5 id="不过这种方式是冗长并且浪费资源的，即便你的编辑器能自动生成这种代码。作为替代方法，可以参考C风格里的结构体样式去编写这种容器数据：">不过这种方式是冗长并且浪费资源的，即便你的编辑器能自动生成这种代码。作为替代方法，可以参考<code>C</code>风格里的结构体样式去编写这种容器数据：</h5><pre><code><span class="keyword">public</span> <span class="keyword">class</span> DataBean {
    <span class="keyword">public</span> <span class="keyword">final</span> String <span class="type">data</span>;

    <span class="keyword">public</span> DataBean(String <span class="type">data</span>) {
        this.<span class="type">data</span> = <span class="type">data</span>;
    }
}
</code></pre></li>
<li><h5 id="这种方式几乎可以使得代码行数减半，除此之外，这种类还是不可变得类，所以在某些情况下我们可以放心的使用它。如果你是希望用Map或者List这些结构体去存储对象而使得修改变得简单点，可以使用ImmuTableMap或者ImmuTableList。这个后边会讨论。">这种方式几乎可以使得代码行数减半，除此之外，这种类还是不可变得类，所以在某些情况下我们可以放心的使用它。如果你是希望用Map或者List这些结构体去存储对象而使得修改变得简单点，可以使用ImmuTableMap或者ImmuTableList。这个后边会讨论。</h5></li>
</ul>
<h4 id="Builder模式">Builder模式</h4><ul>
<li><h5 id="如果你的数据元结构比较复杂，那么你可以考虑如下Builder模式。Builder模式在数据类构造器中定义了一个子类，使用可变状态，不过一旦创建之后就会变得不可改变：">如果你的数据元结构比较复杂，那么你可以考虑如下Builder模式。Builder模式在数据类构造器中定义了一个子类，使用可变状态，不过一旦创建之后就会变得不可改变：</h5><pre><code><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ComplicatedDataBean</span> </span>{
    <span class="keyword">public</span> <span class="keyword">final</span> String data;
    <span class="keyword">public</span> fianl <span class="keyword">int</span> num;
    <span class="comment">// lots more fields and a constructor</span>
    <span class="function"><span class="keyword">private</span> <span class="title">ComplicatedDataBean</span><span class="params">(Builder builder)</span></span>{
        <span class="keyword">this</span>.data = builder.data;
        <span class="keyword">this</span>.num = builder.num;
    }

    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>{
        <span class="keyword">private</span> String data;
        <span class="keyword">private</span> <span class="keyword">int</span> num;

        <span class="function"><span class="keyword">public</span> Builder <span class="title">data</span><span class="params">(String data)</span> </span>{
            <span class="keyword">this</span>.data = data;
            <span class="keyword">return</span> <span class="keyword">this</span>;
        }

        <span class="function"><span class="keyword">public</span> Builder <span class="title">num</span><span class="params">(<span class="keyword">int</span> num)</span></span>{
            <span class="keyword">this</span>.num = num;
            <span class="keyword">return</span> <span class="keyword">this</span>;
        }

        <span class="function"><span class="keyword">public</span> ComplicatedDataBean <span class="title">build</span><span class="params">()</span></span>{
            <span class="keyword">return</span> <span class="keyword">new</span> ComplicatedDataBean(<span class="keyword">this</span>); <span class="comment">// etc</span>
        }
    }
}
</code></pre></li>
<li><h5 id="然后可以按照如下方式使用：">然后可以按照如下方式使用：</h5><pre><code><span class="keyword">final</span> ComplicatedDataBean cda = <span class="keyword">new</span> ComplicatedDataBean.builder().data(<span class="string">"她已经"</span>).<span class="built_in">num</span>(<span class="number">22</span>).build();
</code></pre></li>
</ul>
<h4 id="Dependency_Injection(依赖注入)">Dependency Injection(依赖注入)</h4><ul>
<li><h5 id="依赖注入更多的从属于软件工程的范畴而并非java的范畴，但是去撰写可测试的软件的最好方式就是使用依赖注入。因为java强烈推荐OO的设计方式，为了使软件具有较好的可测试性，可以去使用依赖注入。">依赖注入更多的从属于软件工程的范畴而并非java的范畴，但是去撰写可测试的软件的最好方式就是使用依赖注入。因为java强烈推荐OO的设计方式，为了使软件具有较好的可测试性，可以去使用依赖注入。</h5></li>
<li><h5 id="在java领域，最经典的DI框架当属Spring，它提供了基于代码的注入以及基于xml配置的注入方式。不过Spring确实有些繁琐，如果只是单纯的想使用依赖注入这个功能，可以选择使用Google_和_Square的Dagger库或者Google’s_Guice-">在java领域，最经典的DI框架当属Spring，它提供了基于代码的注入以及基于xml配置的注入方式。不过Spring确实有些繁琐，如果只是单纯的想使用依赖注入这个功能，可以选择使用Google 和 Square的Dagger库或者Google’s Guice.</h5></li>
</ul>
<h4 id="避免空指针">避免空指针</h4><ul>
<li><h5 id="尽可能的避免使用空指针。特别是在可能返回空的集合的情况下，务必返回一个内容为空的集合而不是null。如果使用的是java8，可以使用新的Optional类型来避免可能的空指针。">尽可能的避免使用空指针。特别是在可能返回空的集合的情况下，务必返回一个内容为空的集合而不是null。如果使用的是java8，可以使用新的Optional类型来避免可能的空指针。</h5><pre><code><span class="keyword">public</span> <span class="keyword">class</span> FooWidget {
    <span class="keyword">private</span> <span class="keyword">final</span> String <span class="type">data</span>;
    <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">Optional</span>&lt;Bar&gt; bar;

    <span class="keyword">public</span> FooWidget(String <span class="type">data</span>){
        this(<span class="type">data</span>, <span class="type">Optional</span>.empty());
    }

    <span class="keyword">public</span> FooWidget(String <span class="type">data</span>, <span class="type">Optional</span>&lt;Bar&gt; bar){
        this.<span class="type">data</span> = <span class="type">data</span>;
        this.bar = bar;
    }

    <span class="keyword">public</span> <span class="type">Optional</span>&lt;Bar&gt; getBar(){
        <span class="keyword">return</span> bar;
    }
}
</code></pre></li>
<li><h5 id="根据上述代码可知道，返回的数据肯定不会为null类型，不过bar不一定是present(存在)的">根据上述代码可知道，返回的数据肯定不会为null类型，不过bar不一定是present(存在)的</h5><pre><code><span class="keyword">final</span> Optional&lt;FooWidget&gt; fooWidget = maybeGetFooWidget();
<span class="keyword">final</span> Baz baz = fooWidget.flatMap(FooWidget::getBar).flatMap(BarWidget::getBaz).orElse(defaultBaz);
</code></pre></li>
</ul>
<h4 id="ImmuTable-by-default(默认不可变)">ImmuTable-by-default(默认不可变)</h4><blockquote>
<p>java-advantages-of-of-immutable-objects-in-examples</p>
</blockquote>
<ul>
<li><h5 id="除非有特殊的原因，否则变量，类，集合应该默认设置为不可变。其中变量类型可以使用final关键字设置不可变：">除非有特殊的原因，否则变量，类，集合应该默认设置为不可变。其中变量类型可以使用final关键字设置不可变：</h5><pre><code><span class="keyword">final</span> FooWidget fooWidget;
<span class="keyword">if</span>(condition()){
    fooWidget = getWidget();
}<span class="keyword">else</span>{
    <span class="keyword">try</span>{
        fooWidget = cachedFooWidget.<span class="keyword">get</span>();
    }<span class="keyword">catch</span>(CachingException e){
        <span class="keyword">throw</span> e;
    }
}
</code></pre><p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/better-java-picture1.png" alt="ImmuTable-by-default"></p>
</li>
</ul>
<h4 id="Avoid_lots_of_Util_Classes(避免使用大量工具类)">Avoid lots of Util Classes(避免使用大量工具类)</h4><ul>
<li><h5 id="一不注意，就会发现自己写了N多的工具类，譬如：">一不注意，就会发现自己写了N多的工具类，譬如：</h5><pre><code><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MiscUtil</span> {
  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">frobnicateString</span>(<span class="params">String <span class="keyword">base</span>, <span class="keyword">int</span> times</span>)</span>{
  <span class="comment">// ... etc</span>
  }
}
</code></pre></li>
</ul>
<p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/better-java-picture2.png" alt="ImmuTable-by-default"></p>
<pre><code><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Thrower</span> </span>{
    <span class="function"><span class="keyword">default</span> <span class="keyword">void</span> <span class="title">throwIfCondition</span><span class="params">(<span class="keyword">boolean</span> condition, String msg)</span> </span>{
        <span class="comment">// ...</span>
    }
}
</code></pre><ul>
<li><h5 id="这样每个需要使用这些接口的类可以方便的进行自定义">这样每个需要使用这些接口的类可以方便的进行自定义</h5></li>
</ul>
<h4 id="格式化">格式化</h4><p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/better-java-picture3.png" alt="ImmuTable-by-default"></p>
<h4 id="javaDoc">javaDoc</h4><ul>
<li><h5 id="为你的代码添加javaDoc同样非常重要，可以参考这个示例：using_examples">为你的代码添加javaDoc同样非常重要，可以参考这个示例：using examples</h5></li>
</ul>
<h4 id="Streams">Streams</h4><ul>
<li><h5 id="java_8_提供了非常nice的_stream_api可以用如下的写法：">java 8 提供了非常nice的 stream api可以用如下的写法：</h5><pre><code>final <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; filtered = <span class="built_in">list</span><span class="built_in">.</span>stream()<span class="built_in">.</span>filter(s<span class="subst">-&gt;</span>s<span class="built_in">.</span>startsWith(<span class="string">"s"</span>))<span class="built_in">.</span><span class="built_in">map</span>(s<span class="subst">-&gt;</span>s<span class="built_in">.</span>toUpperCase())<span class="built_in">.</span>collect(Collectors<span class="built_in">.</span>toList());
</code></pre></li>
<li><h5 id="来替代：">来替代：</h5><pre><code><span class="keyword">final</span> List&lt;<span class="keyword">String</span>&gt; filtered = <span class="keyword">new</span> ArrayList&lt;&gt;();
<span class="keyword">for</span> (<span class="keyword">String</span> <span class="built_in">str</span> : list){
    <span class="keyword">if</span>(<span class="built_in">str</span>.startsWith(<span class="string">"s"</span>)){
        filtered.<span class="built_in">add</span>(<span class="built_in">str</span>.toUpperCase());
    }
}
</code></pre></li>
<li><h5 id="这样可以帮助你写更多的高可读性，流畅性的代码。">这样可以帮助你写更多的高可读性，流畅性的代码。</h5></li>
</ul>
<h2 id="本文来自：SegmentFault_版权归属原作者">本文来自：SegmentFault 版权归属原作者</h2>]]></content>
    <summary type="html">
    <![CDATA[<h2 id="教你编写现代化的java程式">教你编写现代化的java程式</h2><blockquote>
<p>Java是目前世界上最流行的编程语言之一，自从java8正式发布之后，原有的编程习惯方式发生了一些转变。</p>
</blockquote>
<h3 id="St]]>
    </summary>
    
      <category term="java编程思想" scheme="http://www.code4a.com/tags/java%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
      <category term="java" scheme="http://www.code4a.com/categories/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[WheelView Android]]></title>
    <link href="http://www.code4a.com/2015/11/15/WheelView-Android/"/>
    <id>http://www.code4a.com/2015/11/15/WheelView-Android/</id>
    <published>2015-11-15T08:42:11.000Z</published>
    <updated>2017-10-23T09:58:49.068Z</updated>
    <content type="html"><![CDATA[<h2 id="Android_横向滚轮选择视图">Android 横向滚轮选择视图</h2><h4 id="适用于为money_或者短词名称做选择器">适用于为money 或者短词名称做选择器</h4><h4 id="先上图，效果图：">先上图，效果图：</h4><p><img src="https://raw.githubusercontent.com/lantouzi/WheelView-Android/master/preview/demo.jpg" alt="WheelView"></p>
<h4 id="使用方式">使用方式</h4><h5 id="布局xml：">布局xml：</h5><p>  <strong>注意在父布局加入<code>xmlns:app=&quot;http://schemas.android.com/apk/res-auto</code>“可使用自定义属性</strong></p>
<pre><code><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="tag">&lt;<span class="title">ScrollView</span>
  <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span>
  <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
  <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span>

  <span class="tag">&lt;<span class="title">LinearLayout</span>
    <span class="attribute">xmlns:app</span>=<span class="value">"http://schemas.android.com/apk/res-auto"</span>
    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span>
    <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
    <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
    <span class="attribute">android:background</span>=<span class="value">"#fafafa"</span>
    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>
    <span class="attribute">android:weightSum</span>=<span class="value">"2"</span>
    <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span>

    <span class="tag">&lt;<span class="title">LinearLayout</span>
      <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span>
      <span class="attribute">android:layout_height</span>=<span class="value">"0dp"</span>
      <span class="attribute">android:layout_weight</span>=<span class="value">"1"</span>
      <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>&gt;</span>

      <span class="tag">&lt;<span class="title">com.lantouzi.wheelview.WheelView</span>
        <span class="attribute">android:id</span>=<span class="value">"@+id/wheelview"</span>
        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
        <span class="attribute">android:layout_marginTop</span>=<span class="value">"8dp"</span>
        <span class="attribute">android:background</span>=<span class="value">"@android:color/white"</span>/&gt;</span>

      <span class="tag">&lt;<span class="title">com.lantouzi.wheelview.WheelView</span>
        <span class="attribute">android:id</span>=<span class="value">"@+id/wheelview2"</span>
        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
        <span class="attribute">android:layout_marginTop</span>=<span class="value">"8dp"</span>
        <span class="attribute">android:background</span>=<span class="value">"@android:color/white"</span>
        <span class="attribute">app:lwvHighlightColor</span>=<span class="value">"#7CD717"</span>
        <span class="attribute">app:lwvIntervalFactor</span>=<span class="value">"1.1"</span>/&gt;</span>

      <span class="tag">&lt;<span class="title">com.lantouzi.wheelview.WheelView</span>
        <span class="attribute">android:id</span>=<span class="value">"@+id/wheelview3"</span>
        <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
        <span class="attribute">android:layout_marginTop</span>=<span class="value">"8dp"</span>
        <span class="attribute">android:background</span>=<span class="value">"@android:color/white"</span>
        <span class="attribute">app:lwvHighlightColor</span>=<span class="value">"#31B1E6"</span>
        <span class="attribute">app:lwvIntervalFactor</span>=<span class="value">"1.3"</span>
        <span class="attribute">app:lwvMarkRatio</span>=<span class="value">"0.2"</span>
        <span class="attribute">app:lwvMarkTextColor</span>=<span class="value">"#919191"</span>/&gt;</span>

    <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span>

    <span class="tag">&lt;<span class="title">com.lantouzi.wheelview.WheelView</span>
      <span class="attribute">android:id</span>=<span class="value">"@+id/wheelview4"</span>
      <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
      <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
      <span class="attribute">android:layout_marginTop</span>=<span class="value">"16dp"</span>
      <span class="attribute">android:background</span>=<span class="value">"#222222"</span>
      <span class="attribute">app:lwvAdditionalCenterMark</span>=<span class="value">"元"</span>
      <span class="attribute">app:lwvHighlightColor</span>=<span class="value">"#31B1E6"</span>
      <span class="attribute">app:lwvMarkColor</span>=<span class="value">"#EEEEEE"</span>
      <span class="attribute">app:lwvMarkTextColor</span>=<span class="value">"#CACACA"</span>/&gt;</span>

    <span class="tag">&lt;<span class="title">com.lantouzi.wheelview.WheelView</span>
      <span class="attribute">android:id</span>=<span class="value">"@+id/wheelview5"</span>
      <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
      <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
      <span class="attribute">android:layout_marginTop</span>=<span class="value">"16dp"</span>
      <span class="attribute">android:background</span>=<span class="value">"#222222"</span>
      <span class="attribute">app:lwvAdditionalCenterMark</span>=<span class="value">"元"</span>
      <span class="attribute">app:lwvCenterMarkTextSize</span>=<span class="value">"14sp"</span>
      <span class="attribute">app:lwvCursorSize</span>=<span class="value">"10dp"</span>
      <span class="attribute">app:lwvHighlightColor</span>=<span class="value">"#31B1E6"</span>
      <span class="attribute">app:lwvMarkColor</span>=<span class="value">"#EEEEEE"</span>
      <span class="attribute">app:lwvMarkTextColor</span>=<span class="value">"#CACACA"</span>
      <span class="attribute">app:lwvMarkTextSize</span>=<span class="value">"12sp"</span>/&gt;</span>

    <span class="tag">&lt;<span class="title">TextView</span>
      <span class="attribute">android:id</span>=<span class="value">"@+id/selected_tv"</span>
      <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span>
      <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span>
      <span class="attribute">android:layout_margin</span>=<span class="value">"8dp"</span>
      <span class="attribute">android:gravity</span>=<span class="value">"center"</span>/&gt;</span>
  <span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span>
<span class="tag">&lt;/<span class="title">ScrollView</span>&gt;</span>
</code></pre><h4 id="Activity中实现:">Activity中实现:</h4><pre><code>  <span class="keyword">private</span> WheelView mWheelView, mWheelView2, mWheelView3, mWheelView4, mWheelView5;
  <span class="keyword">private</span> TextView mSelectedTv;

  @Override
  <span class="keyword">protected</span> <span class="keyword">void</span> onCreate(Bundle savedInstanceState) {
    <span class="keyword">super</span>.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    mWheelView = (WheelView) findViewById(R.id.wheelview);
    mWheelView2 = (WheelView) findViewById(R.id.wheelview2);
    mWheelView3 = (WheelView) findViewById(R.id.wheelview3);
    mWheelView4 = (WheelView) findViewById(R.id.wheelview4);
    mWheelView5 = (WheelView) findViewById(R.id.wheelview5);
    mSelectedTv = (TextView) findViewById(R.id.selected_tv);

    <span class="keyword">final</span> List&lt;<span class="keyword">String</span>&gt; items = <span class="keyword">new</span> ArrayList&lt;&gt;();
    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">40</span>; i++) {
      items.<span class="built_in">add</span>(<span class="keyword">String</span>.valueOf(i * <span class="number">1000</span>));
    }

    mWheelView.setItems(items);
    mWheelView.selectIndex(<span class="number">8</span>);
    mWheelView.setAdditionCenterMark(<span class="string">"元"</span>);

    List&lt;<span class="keyword">String</span>&gt; items2 = <span class="keyword">new</span> ArrayList&lt;&gt;();
    items2.<span class="built_in">add</span>(<span class="string">"一月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"二月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"三月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"四月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"五月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"六月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"七月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"八月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"九月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"十月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"十一月"</span>);
    items2.<span class="built_in">add</span>(<span class="string">"十二月"</span>);

    mWheelView2.setItems(items2);

    List&lt;<span class="keyword">String</span>&gt; items3 = <span class="keyword">new</span> ArrayList&lt;&gt;();
    items3.<span class="built_in">add</span>(<span class="string">"1"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"2"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"3"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"5"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"7"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"11"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"13"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"17"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"19"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"23"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"29"</span>);
    items3.<span class="built_in">add</span>(<span class="string">"31"</span>);

    mWheelView3.setItems(items3);
    mWheelView3.setAdditionCenterMark(<span class="string">"m"</span>);

    mWheelView4.setItems(items);

    mWheelView5.setItems(items);
    mWheelView5.setOnWheelItemSelectedListener(<span class="keyword">new</span> WheelView.OnWheelItemSelectedListener() {
      @Override
      <span class="keyword">public</span> <span class="keyword">void</span> onWheelItemSelected(<span class="built_in">int</span> position) {
        mSelectedTv.setText(<span class="string">"选择："</span> + items.<span class="built_in">get</span>(position) + <span class="string">"万"</span>);
      }
    });

}
</code></pre><h4 id="引用的wheelview">引用的wheelview</h4><h5 id="attrs-xml">attrs.xml</h5><pre><code><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="tag">&lt;<span class="title">resources</span>&gt;</span>
  <span class="tag">&lt;<span class="title">declare-styleable</span> <span class="attribute">name</span>=<span class="value">"WheelView"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvHighlightColor"</span> <span class="attribute">format</span>=<span class="value">"color|reference"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvMarkColor"</span> <span class="attribute">format</span>=<span class="value">"color|reference"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvMarkTextColor"</span> <span class="attribute">format</span>=<span class="value">"color|reference"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvIntervalFactor"</span> <span class="attribute">format</span>=<span class="value">"float"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvMarkRatio"</span> <span class="attribute">format</span>=<span class="value">"float"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvCursorSize"</span> <span class="attribute">format</span>=<span class="value">"dimension"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvMarkTextSize"</span> <span class="attribute">format</span>=<span class="value">"dimension"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvCenterMarkTextSize"</span> <span class="attribute">format</span>=<span class="value">"dimension"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvHighlightMarkTextSize"</span> <span class="attribute">format</span>=<span class="value">"dimension"</span>/&gt;</span>
    <span class="tag">&lt;<span class="title">attr</span> <span class="attribute">name</span>=<span class="value">"lwvAdditionalCenterMark"</span> <span class="attribute">format</span>=<span class="value">"string|reference"</span>/&gt;</span>
  <span class="tag">&lt;/<span class="title">declare-styleable</span>&gt;</span>
<span class="tag">&lt;/<span class="title">resources</span>&gt;</span>
</code></pre><h5 id="自定义视图WheelView">自定义视图WheelView</h5><pre><code>package com.lantouzi.wheelview;

import android.content.Context;
import android.content.res.TypedArray;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.RectF;
import android.os.Parcel;
import android.os.Parcelable;
import android.support.v4.view.GestureDetectorCompat;
import android.support.v4.view.ViewCompat;
import android.text.TextPaint;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.view.GestureDetector;
import android.view.MotionEvent;
import android.view.SoundEffectConstants;
import android.view.View;
import android.widget.OverScroller;

import com.lantouzi.wheelview.library.R;

import java.util.List;

<span class="comment">/**
* Created by kyle on 15/11/9.
*/</span>
<span class="keyword">public</span> <span class="keyword">class</span> WheelView extends View implements GestureDetector.OnGestureListener {
  <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">float</span> DEFAULT_INTERVAL_FACTOR = <span class="number">1.2f</span>;
  <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">float</span> DEFAULT_MARK_RATIO = <span class="number">0.7f</span>;

  <span class="keyword">private</span> Paint mMarkPaint;
  <span class="keyword">private</span> TextPaint mMarkTextPaint;
  <span class="keyword">private</span> <span class="keyword">int</span> mCenterIndex;

  <span class="keyword">private</span> <span class="keyword">int</span> mHighlightColor, mMarkTextColor;
  <span class="keyword">private</span> <span class="keyword">int</span> mMarkColor, mFadeMarkColor;

  <span class="keyword">private</span> <span class="keyword">int</span> mHeight;
  <span class="keyword">private</span> List&lt;String&gt; mItems;
  <span class="keyword">private</span> String mAdditionCenterMark;
  <span class="keyword">private</span> OnWheelItemSelectedListener mOnWheelItemSelectedListener;
  <span class="keyword">private</span> <span class="keyword">float</span> mIntervalFactor = DEFAULT_INTERVAL_FACTOR;
  <span class="keyword">private</span> <span class="keyword">float</span> mMarkRatio = DEFAULT_MARK_RATIO;

  <span class="keyword">private</span> <span class="keyword">int</span> mMarkCount;
  <span class="keyword">private</span> <span class="keyword">float</span> mAdditionCenterMarkWidth;
  <span class="keyword">private</span> Path mCenterIndicatorPath = <span class="keyword">new</span> Path();
  <span class="keyword">private</span> <span class="keyword">float</span> mCursorSize;
  <span class="keyword">private</span> <span class="keyword">int</span> mViewScopeSize;

  <span class="comment">// scroll control args ---- start</span>
  <span class="keyword">private</span> OverScroller mScroller;
  <span class="keyword">private</span> <span class="keyword">float</span> mMaxOverScrollDistance;
  <span class="keyword">private</span> RectF mContentRectF;
  <span class="keyword">private</span> boolean mFling = <span class="literal">false</span>;
  <span class="keyword">private</span> <span class="keyword">float</span> mCenterTextSize, mNormalTextSize;
  <span class="keyword">private</span> <span class="keyword">float</span> mTopSpace, mBottomSpace;
  <span class="keyword">private</span> <span class="keyword">float</span> mIntervalDis;
  <span class="keyword">private</span> <span class="keyword">float</span> mCenterMarkWidth, mMarkWidth;
  <span class="keyword">private</span> GestureDetectorCompat mGestureDetectorCompat;
  <span class="comment">// scroll control args ---- end</span>


  <span class="function"><span class="keyword">public</span> <span class="title">WheelView</span><span class="params">(Context context)</span> </span>{
    super(context);
    init(null);
  }

  <span class="function"><span class="keyword">public</span> <span class="title">WheelView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>{
    super(context, attrs);
    init(attrs);
  }

  <span class="function"><span class="keyword">public</span> <span class="title">WheelView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>{
    super(context, attrs, defStyleAttr);
    init(attrs);
  }

  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(AttributeSet attrs)</span> </span>{
    <span class="keyword">float</span> density = getResources().getDisplayMetrics().density;
    mCenterMarkWidth = (<span class="keyword">int</span>) (density * <span class="number">1.5f</span> + <span class="number">0.5f</span>);
    mMarkWidth = density;

    mHighlightColor = <span class="number">0xFFF74C39</span>;
    mMarkTextColor = <span class="number">0xFF666666</span>;
    mMarkColor = <span class="number">0xFFEEEEEE</span>;
    mCursorSize = density * <span class="number">18</span>;
    mCenterTextSize = density * <span class="number">22</span>;
    mNormalTextSize = density * <span class="number">18</span>;
    mBottomSpace = density * <span class="number">6</span>;

    TypedArray ta = attrs == null ? null : getContext().obtainStyledAttributes(attrs, R.styleable.WheelView);
    <span class="keyword">if</span> (ta != null) {
      mHighlightColor = ta.getColor(R.styleable.WheelView_lwvHighlightColor, mHighlightColor);
      mMarkTextColor = ta.getColor(R.styleable.WheelView_lwvMarkTextColor, mMarkTextColor);
      mMarkColor = ta.getColor(R.styleable.WheelView_lwvMarkColor, mMarkColor);
      mIntervalFactor = ta.getFloat(R.styleable.WheelView_lwvIntervalFactor, mIntervalFactor);
      mMarkRatio = ta.getFloat(R.styleable.WheelView_lwvMarkRatio, mMarkRatio);
      mAdditionCenterMark = ta.getString(R.styleable.WheelView_lwvAdditionalCenterMark);
      mCenterTextSize = ta.getDimension(R.styleable.WheelView_lwvCenterMarkTextSize, mCenterTextSize);
      mNormalTextSize = ta.getDimension(R.styleable.WheelView_lwvMarkTextSize, mNormalTextSize);
      mCursorSize = ta.getDimension(R.styleable.WheelView_lwvCursorSize, mCursorSize);
    }
    mFadeMarkColor = mHighlightColor &amp; <span class="number">0xAAFFFFFF</span>;
    mIntervalFactor = Math.max(<span class="number">1</span>, mIntervalFactor);
    mMarkRatio = Math.min(<span class="number">1</span>, mMarkRatio);
    mTopSpace = mCursorSize + density * <span class="number">2</span>;

    mMarkPaint = <span class="keyword">new</span> Paint(Paint.ANTI_ALIAS_FLAG);
    mMarkTextPaint = <span class="keyword">new</span> TextPaint(Paint.ANTI_ALIAS_FLAG);
    mMarkTextPaint.setTextAlign(Paint.Align.CENTER);
    mMarkTextPaint.setColor(mHighlightColor);

    mMarkPaint.setColor(mMarkColor);
    mMarkPaint.setStrokeWidth(mCenterMarkWidth);

    mMarkTextPaint.setTextSize(mCenterTextSize);
    calcIntervalDis();

    mScroller = <span class="keyword">new</span> OverScroller(getContext());
    mContentRectF = <span class="keyword">new</span> RectF();

    mGestureDetectorCompat = <span class="keyword">new</span> GestureDetectorCompat(getContext(), <span class="keyword">this</span>);

    selectIndex(<span class="number">0</span>);
  }

  <span class="comment">/**
   * calculate interval distance between items
   */</span>
  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">calcIntervalDis</span><span class="params">()</span> </span>{
    <span class="keyword">if</span> (mMarkTextPaint == null) {
      <span class="keyword">return</span>;
    }
    String defaultText = <span class="string">"888888"</span>;
    Rect temp = <span class="keyword">new</span> Rect();
    <span class="keyword">int</span> max = <span class="number">0</span>;
    <span class="keyword">if</span> (mItems != null &amp;&amp; mItems.size() &gt; <span class="number">0</span>) {
      <span class="keyword">for</span> (String i : mItems) {
        mMarkTextPaint.getTextBounds(i, <span class="number">0</span>, i.length(), temp);
        <span class="keyword">if</span> (temp.width() &gt; max) {
          max = temp.width();
        }
      }
    } <span class="keyword">else</span> {
      mMarkTextPaint.getTextBounds(defaultText, <span class="number">0</span>, defaultText.length(), temp);
      max = temp.width();
    }

    <span class="keyword">if</span> (!TextUtils.isEmpty(mAdditionCenterMark)) {
      mMarkTextPaint.setTextSize(mNormalTextSize);
      mMarkTextPaint.getTextBounds(mAdditionCenterMark, <span class="number">0</span>, mAdditionCenterMark.length(), temp);
      mAdditionCenterMarkWidth = temp.width();
      max += temp.width();
    }

    mIntervalDis = max * mIntervalFactor;
  }

  @<span class="function">Override
  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>{
    setMeasuredDimension(measureWidth(widthMeasureSpec), measureHeight(heightMeasureSpec));
  }

  <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">measureWidth</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec)</span> </span>{
    <span class="keyword">int</span> measureMode = MeasureSpec.getMode(widthMeasureSpec);
    <span class="keyword">int</span> measureSize = MeasureSpec.getSize(widthMeasureSpec);
    <span class="keyword">int</span> result = getSuggestedMinimumWidth();
    <span class="keyword">switch</span> (measureMode) {
      <span class="keyword">case</span> MeasureSpec.AT_MOST:
      <span class="keyword">case</span> MeasureSpec.EXACTLY:
        result = measureSize;
        <span class="keyword">break</span>;
      <span class="keyword">default</span>:
        <span class="keyword">break</span>;
    }
    <span class="keyword">return</span> result;
  }

  <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">measureHeight</span><span class="params">(<span class="keyword">int</span> heightMeasure)</span> </span>{
    <span class="keyword">int</span> measureMode = MeasureSpec.getMode(heightMeasure);
    <span class="keyword">int</span> measureSize = MeasureSpec.getSize(heightMeasure);
    <span class="keyword">int</span> result = (<span class="keyword">int</span>) (mBottomSpace + mTopSpace * <span class="number">2</span> + mCenterTextSize);
    <span class="keyword">switch</span> (measureMode) {
      <span class="keyword">case</span> MeasureSpec.EXACTLY:
        result = Math.max(result, measureSize);
        <span class="keyword">break</span>;
      <span class="keyword">case</span> MeasureSpec.AT_MOST:
        result = Math.min(result, measureSize);
        <span class="keyword">break</span>;
      <span class="keyword">default</span>:
        <span class="keyword">break</span>;
    }
    <span class="keyword">return</span> result;
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fling</span><span class="params">(<span class="keyword">int</span> velocityX, <span class="keyword">int</span> velocityY)</span> </span>{
    mScroller.fling(getScrollX(), getScrollY(), velocityX, velocityY, (<span class="keyword">int</span>) -mMaxOverScrollDistance, (<span class="keyword">int</span>) (mContentRectF.width() - mMaxOverScrollDistance), <span class="number">0</span>, <span class="number">0</span>, (<span class="keyword">int</span>) mMaxOverScrollDistance, <span class="number">0</span>);
    ViewCompat.postInvalidateOnAnimation(<span class="keyword">this</span>);
  }

  @<span class="function">Override
  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>{
    super.onSizeChanged(w, h, oldw, oldh);
    <span class="keyword">if</span> (w != oldw || h != oldh) {
      mHeight = h;
      mMaxOverScrollDistance = w / <span class="number">2.f</span>;
      mContentRectF.<span class="built_in">set</span>(<span class="number">0</span>, <span class="number">0</span>, (mMarkCount - <span class="number">1</span>) * mIntervalDis, h);
      mViewScopeSize = (<span class="keyword">int</span>) Math.<span class="built_in">ceil</span>(mMaxOverScrollDistance / mIntervalDis);
    }
  }

  @<span class="function">Override
  <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>{
    super.onDraw(canvas);

    mCenterIndicatorPath.reset();
    <span class="keyword">float</span> sizeDiv2 = mCursorSize / <span class="number">2f</span>;
    <span class="keyword">float</span> sizeDiv3 = mCursorSize / <span class="number">3f</span>;
    mCenterIndicatorPath.moveTo(mMaxOverScrollDistance - sizeDiv2 + getScrollX(), <span class="number">0</span>);
    mCenterIndicatorPath.rLineTo(<span class="number">0</span>, sizeDiv3);
    mCenterIndicatorPath.rLineTo(sizeDiv2, sizeDiv2);
    mCenterIndicatorPath.rLineTo(sizeDiv2, -sizeDiv2);
    mCenterIndicatorPath.rLineTo(<span class="number">0</span>, -sizeDiv3);
    mCenterIndicatorPath.close();

    mMarkPaint.setColor(mHighlightColor);
    canvas.drawPath(mCenterIndicatorPath, mMarkPaint);

    <span class="keyword">int</span> start = mCenterIndex - mViewScopeSize;
    <span class="keyword">int</span> end = mCenterIndex + mViewScopeSize + <span class="number">1</span>;

    start = Math.max(start, -mViewScopeSize * <span class="number">2</span>);
    end = Math.min(end, mMarkCount + mViewScopeSize * <span class="number">2</span>);

    <span class="comment">// extends both ends</span>
    <span class="keyword">if</span> (mCenterIndex == mMarkCount - <span class="number">1</span>) {
      end += mViewScopeSize;
    } <span class="keyword">else</span> <span class="keyword">if</span> (mCenterIndex == <span class="number">0</span>) {
      start -= mViewScopeSize;
    }

    <span class="keyword">float</span> x = start * mIntervalDis;

    <span class="keyword">float</span> markHeight =  mHeight - mBottomSpace - mCenterTextSize - mTopSpace;
    <span class="comment">// small scale Y offset</span>
    <span class="keyword">float</span> smallMarkShrinkY = markHeight * (<span class="number">1</span> - mMarkRatio) / <span class="number">2f</span>;
    smallMarkShrinkY = Math.min((markHeight - mMarkWidth) / <span class="number">2f</span>, smallMarkShrinkY);

    <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; end; i++) {
      <span class="keyword">float</span> tempDis = mIntervalDis / <span class="number">5f</span>;
      <span class="comment">// offset: Small mark offset Big mark</span>
      <span class="keyword">for</span> (<span class="keyword">int</span> offset = -<span class="number">2</span>; offset &lt; <span class="number">3</span>; offset++) {
        <span class="keyword">float</span> ox = x + offset * tempDis;

        <span class="keyword">if</span> (i &gt;= <span class="number">0</span> &amp;&amp; i &lt;= mMarkCount &amp;&amp; mCenterIndex == i) {
          <span class="keyword">int</span> tempOffset = Math.<span class="built_in">abs</span>(offset);
          <span class="keyword">if</span> (tempOffset == <span class="number">0</span>) {
            mMarkPaint.setColor(mHighlightColor);
          } <span class="keyword">else</span> <span class="keyword">if</span> (tempOffset == <span class="number">1</span>) {
            mMarkPaint.setColor(mFadeMarkColor);
          } <span class="keyword">else</span> {
            mMarkPaint.setColor(mMarkColor);
          }
        } <span class="keyword">else</span> {
          mMarkPaint.setColor(mMarkColor);
        }

        <span class="keyword">if</span> (offset == <span class="number">0</span>) {
          <span class="comment">// center mark</span>
          mMarkPaint.setStrokeWidth(mCenterMarkWidth);
          canvas.drawLine(ox, mTopSpace, ox, mTopSpace + markHeight, mMarkPaint);
        } <span class="keyword">else</span> {
          <span class="comment">// other small mark</span>
          mMarkPaint.setStrokeWidth(mMarkWidth);
          canvas.drawLine(ox, mTopSpace + smallMarkShrinkY, ox, mTopSpace + markHeight - smallMarkShrinkY, mMarkPaint);
        }
      }

      <span class="comment">// mark text</span>
      <span class="keyword">if</span> (mMarkCount &gt; <span class="number">0</span> &amp;&amp; i &gt;= <span class="number">0</span> &amp;&amp; i &lt; mMarkCount) {
        CharSequence temp = mItems.get(i);
        <span class="keyword">if</span> (mCenterIndex == i) {
          mMarkTextPaint.setColor(mHighlightColor);
          mMarkTextPaint.setTextSize(mCenterTextSize);
          <span class="keyword">if</span> (!TextUtils.isEmpty(mAdditionCenterMark)) {
            <span class="keyword">float</span> off = mAdditionCenterMarkWidth / <span class="number">2f</span>;
            <span class="keyword">float</span> tsize = mMarkTextPaint.measureText(temp, <span class="number">0</span>, temp.length());
            canvas.drawText(temp, <span class="number">0</span>, temp.length(), x - off, mHeight - mBottomSpace, mMarkTextPaint);
            mMarkTextPaint.setTextSize(mNormalTextSize);
            canvas.drawText(mAdditionCenterMark, x + tsize / <span class="number">2f</span>, mHeight - mBottomSpace, mMarkTextPaint);
          } <span class="keyword">else</span> {
            canvas.drawText(temp, <span class="number">0</span>, temp.length(), x, mHeight - mBottomSpace, mMarkTextPaint);
          }
        } <span class="keyword">else</span> {
          mMarkTextPaint.setColor(mMarkTextColor);
          mMarkTextPaint.setTextSize(mNormalTextSize);
          canvas.drawText(temp, <span class="number">0</span>, temp.length(), x, mHeight - mBottomSpace, mMarkTextPaint);
        }
      }

      x += mIntervalDis;
    }
  }

  @<span class="function">Override
  <span class="keyword">public</span> boolean <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>{
    <span class="keyword">if</span> (mItems == null || mItems.size() == <span class="number">0</span>) {
      <span class="keyword">return</span> <span class="literal">false</span>;
    }
    boolean ret = mGestureDetectorCompat.onTouchEvent(event);
    <span class="keyword">if</span> (!mFling &amp;&amp; MotionEvent.ACTION_UP == event.getAction()) {
      <span class="keyword">if</span> (getScrollX() &lt; -mMaxOverScrollDistance) {
        mScroller.startScroll(getScrollX(), <span class="number">0</span>, (<span class="keyword">int</span>) -mMaxOverScrollDistance - getScrollX(), <span class="number">0</span>);
        invalidate();
        ret = <span class="literal">true</span>;
      } <span class="keyword">else</span> <span class="keyword">if</span> (getScrollX() &gt; mContentRectF.width() - mMaxOverScrollDistance) {
        mScroller.startScroll(getScrollX(), <span class="number">0</span>, (<span class="keyword">int</span>) (mContentRectF.width() - mMaxOverScrollDistance) - getScrollX(), <span class="number">0</span>);
        invalidate();
        ret = <span class="literal">true</span>;
      } <span class="keyword">else</span> {
        autoSettle();
        ret = <span class="literal">true</span>;
      }
    }
    <span class="keyword">return</span> ret || super.onTouchEvent(event);
  }

  @<span class="function">Override
  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">computeScroll</span><span class="params">()</span> </span>{
    super.computeScroll();
    <span class="keyword">if</span> (mScroller.computeScrollOffset()) {
      scrollTo(mScroller.getCurrX(), mScroller.getCurrY());
      refreshCenter();
      invalidate();
    } <span class="keyword">else</span> {
      <span class="keyword">if</span> (mFling) {
        mFling = <span class="literal">false</span>;
        autoSettle();
      }
    }
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAdditionCenterMark</span><span class="params">(String additionCenterMark)</span> </span>{
    mAdditionCenterMark = additionCenterMark;
    calcIntervalDis();
    invalidate();
  }

  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">autoSettle</span><span class="params">()</span> </span>{
    <span class="keyword">int</span> sx = getScrollX();
    <span class="keyword">float</span> dx = mCenterIndex * mIntervalDis - sx - mMaxOverScrollDistance;
    mScroller.startScroll(sx, <span class="number">0</span>, (<span class="keyword">int</span>) dx, <span class="number">0</span>);
    invalidate();
  }

  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshCenter</span><span class="params">(<span class="keyword">int</span> offsetX)</span> </span>{
    <span class="keyword">int</span> offset = (<span class="keyword">int</span>) (offsetX + mMaxOverScrollDistance);
    mCenterIndex = Math.round(offset / mIntervalDis);
    <span class="keyword">if</span> (mCenterIndex &lt; <span class="number">0</span>) {
      mCenterIndex = <span class="number">0</span>;
    } <span class="keyword">else</span> <span class="keyword">if</span> (mCenterIndex &gt; mMarkCount - <span class="number">1</span>) {
      mCenterIndex = mMarkCount - <span class="number">1</span>;
    }
    <span class="keyword">if</span> (null != mOnWheelItemSelectedListener) {
      mOnWheelItemSelectedListener.onWheelItemSelected(mCenterIndex);
    }
  }

  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">refreshCenter</span><span class="params">()</span> </span>{
    refreshCenter(getScrollX());
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectIndex</span><span class="params">(<span class="keyword">int</span> index)</span> </span>{
    mCenterIndex = index;
    post(<span class="keyword">new</span> Runnable() {
      @<span class="function">Override
      <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>{
        scrollTo((<span class="keyword">int</span>) (mCenterIndex * mIntervalDis - mMaxOverScrollDistance), <span class="number">0</span>);
        invalidate();
        refreshCenter();
      }
    });
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">smoothSelectIndex</span><span class="params">(<span class="keyword">int</span> index)</span> </span>{
    <span class="keyword">if</span> (!mScroller.isFinished()) {
      mScroller.abortAnimation();
    }
    <span class="keyword">int</span> deltaIndex = index - mCenterIndex;
    mScroller.startScroll(getScrollX(), <span class="number">0</span>, (<span class="keyword">int</span>) (deltaIndex * mIntervalDis), <span class="number">0</span>);
    invalidate();
  }

  <span class="keyword">public</span> List&lt;String&gt; getItems() {
    <span class="keyword">return</span> mItems;
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItems</span><span class="params">(List&lt;String&gt; items)</span> </span>{
    mItems = items;
    mMarkCount = null == mItems ? <span class="number">0</span> : mItems.size();
    mCenterIndex = Math.min(mCenterIndex, mMarkCount);
    calcIntervalDis();
    invalidate();
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSelectedPosition</span><span class="params">()</span> </span>{
    <span class="keyword">return</span> mCenterIndex;
  }

  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnWheelItemSelectedListener</span><span class="params">(OnWheelItemSelectedListener onWheelItemSelectedListener)</span> </span>{
    mOnWheelItemSelectedListener = onWheelItemSelectedListener;
  }

  @<span class="function">Override
  <span class="keyword">public</span> boolean <span class="title">onDown</span><span class="params">(MotionEvent e)</span> </span>{
    <span class="keyword">if</span> (!mScroller.isFinished()) {
      mScroller.forceFinished(<span class="literal">false</span>);
    }
    mFling = <span class="literal">false</span>;
    <span class="keyword">if</span> (null != getParent()) {
      getParent().requestDisallowInterceptTouchEvent(<span class="literal">true</span>);
    }
    <span class="keyword">return</span> <span class="literal">true</span>;
  }

  @<span class="function">Override
  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShowPress</span><span class="params">(MotionEvent e)</span> </span>{

  }

  @<span class="function">Override
  <span class="keyword">public</span> boolean <span class="title">onSingleTapUp</span><span class="params">(MotionEvent e)</span> </span>{
    playSoundEffect(SoundEffectConstants.CLICK);
    refreshCenter((<span class="keyword">int</span>) (getScrollX() + e.getX() - mMaxOverScrollDistance));
    autoSettle();
    <span class="keyword">return</span> <span class="literal">true</span>;
  }

  @<span class="function">Override
  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLongPress</span><span class="params">(MotionEvent e)</span> </span>{
  }

  @<span class="function">Override
  <span class="keyword">public</span> boolean <span class="title">onScroll</span><span class="params">(MotionEvent e1, MotionEvent e2, <span class="keyword">float</span> distanceX, <span class="keyword">float</span> distanceY)</span> </span>{
    <span class="keyword">float</span> dis = distanceX;
    <span class="keyword">float</span> scrollX = getScrollX();
    <span class="keyword">if</span> (scrollX &lt; <span class="number">2</span> * -mMaxOverScrollDistance) {
      dis = <span class="number">0</span>;
    } <span class="keyword">else</span> <span class="keyword">if</span> (scrollX &lt; -mMaxOverScrollDistance) {
      dis = distanceX / <span class="number">4.f</span>;
    } <span class="keyword">else</span> <span class="keyword">if</span> (scrollX &gt; mContentRectF.width()) {
      dis = <span class="number">0</span>;
    } <span class="keyword">else</span> <span class="keyword">if</span> (scrollX &gt; mContentRectF.width() - mMaxOverScrollDistance) {
      dis = distanceX / <span class="number">4.f</span>;
    }
    scrollBy((<span class="keyword">int</span>) dis, <span class="number">0</span>);
    refreshCenter();
    <span class="keyword">return</span> <span class="literal">true</span>;
  }

  @<span class="function">Override
  <span class="keyword">public</span> boolean <span class="title">onFling</span><span class="params">(MotionEvent e1, MotionEvent e2, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY)</span> </span>{
    <span class="keyword">float</span> scrollX = getScrollX();
    <span class="keyword">if</span> (scrollX &lt; -mMaxOverScrollDistance || scrollX &gt; mContentRectF.width() - mMaxOverScrollDistance) {
      <span class="keyword">return</span> <span class="literal">false</span>;
    } <span class="keyword">else</span> {
      mFling = <span class="literal">true</span>;
      fling((<span class="keyword">int</span>) -velocityX, <span class="number">0</span>);
      <span class="keyword">return</span> <span class="literal">true</span>;
    }
  }

  @<span class="function">Override
  <span class="keyword">public</span> Parcelable <span class="title">onSaveInstanceState</span><span class="params">()</span> </span>{
    Parcelable superState = super.onSaveInstanceState();
    SavedState ss = <span class="keyword">new</span> SavedState(superState);
    ss.index = getSelectedPosition();
    <span class="keyword">return</span> ss;
  }

  @<span class="function">Override
  <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRestoreInstanceState</span><span class="params">(Parcelable state)</span> </span>{
    SavedState ss = (SavedState) state;
    super.onRestoreInstanceState(ss.getSuperState());
    selectIndex(ss.index);
    requestLayout();
  }

  <span class="keyword">static</span> <span class="keyword">class</span> SavedState extends BaseSavedState {
    <span class="keyword">int</span> index;
    <span class="keyword">public</span> <span class="keyword">static</span> final Parcelable.Creator&lt;SavedState&gt; CREATOR
        = <span class="keyword">new</span> Parcelable.Creator&lt;SavedState&gt;() {
      <span class="function"><span class="keyword">public</span> SavedState <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>{
        <span class="keyword">return</span> <span class="keyword">new</span> SavedState(in);
      }

      <span class="keyword">public</span> SavedState[] newArray(<span class="keyword">int</span> size) {
        <span class="keyword">return</span> <span class="keyword">new</span> SavedState[size];
      }
    };
    SavedState(Parcelable superState) {
      super(superState);
    }

    <span class="function"><span class="keyword">private</span> <span class="title">SavedState</span><span class="params">(Parcel in)</span> </span>{
      super(in);
      index = (<span class="keyword">int</span>) in.readValue(null);
    }

    @<span class="function">Override
    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel out, <span class="keyword">int</span> flags)</span> </span>{
      super.writeToParcel(out, flags);
      out.writeValue(index);
    }

    @<span class="function">Override
    <span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>{
      <span class="keyword">return</span> <span class="string">"WheelView.SavedState{"</span>
          + Integer.toHexString(System.identityHashCode(<span class="keyword">this</span>))
          + <span class="string">" index="</span> + index + <span class="string">"}"</span>;
    }
  }

  <span class="keyword">public</span> interface OnWheelItemSelectedListener {
    <span class="function"><span class="keyword">void</span> <span class="title">onWheelItemSelected</span><span class="params">(<span class="keyword">int</span> position)</span></span>;
  }
}
</code></pre><h2 id="致谢：">致谢：</h2><p>  <a href="https://github.com/lantouzi/WheelView-Android" target="_blank" rel="external">lantouzi的WheelView-Android</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Android_横向滚轮选择视图">Android 横向滚轮选择视图</h2><h4 id="适用于为money_或者短词名称做选择器">适用于为money 或者短词名称做选择器</h4><h4 id="先上图，效果图：">先上图，效果图：</h4><p><img]]>
    </summary>
    
      <category term="Android" scheme="http://www.code4a.com/tags/Android/"/>
    
      <category term="Android View" scheme="http://www.code4a.com/categories/Android-View/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[添加网易云音乐]]></title>
    <link href="http://www.code4a.com/2015/11/13/music-163/"/>
    <id>http://www.code4a.com/2015/11/13/music-163/</id>
    <published>2015-11-12T16:44:45.000Z</published>
    <updated>2017-10-23T10:48:21.984Z</updated>
    <content type="html"><![CDATA[<h3 id="为个人博客添加网易云音乐">为个人博客添加网易云音乐</h3><h4 id="首先进入到网易云音乐">首先进入到<a href="http://music.163.com/" target="_blank" rel="external">网易云音乐</a></h4><h4 id="然后可以创建新的歌单，也可使用已有的歌单">然后可以创建新的歌单，也可使用已有的歌单</h4><p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/music-163-picture1.png" alt="music-163-picture1"></p>
<h4 id="点击生成外链播放器，调整如下图界面">点击生成外链播放器，调整如下图界面</h4><p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/music-163-picture2.png" alt="music-163-picture2"></p>
<h4 id="复制下边的html代码直接粘贴到markdown文件中即可">复制下边的html代码直接粘贴到markdown文件中即可</h4><p><img src="https://raw.githubusercontent.com/code4a/code4a.github.io/master/bimg/music-163-picture3.png" alt="music-163-picture3"></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="为个人博客添加网易云音乐">为个人博客添加网易云音乐</h3><h4 id="首先进入到网易云音乐">首先进入到<a href="http://music.163.com/" target="_blank" rel="external">网易云音乐</a></h4]]>
    </summary>
    
      <category term="hexo" scheme="http://www.code4a.com/tags/hexo/"/>
    
      <category term="play" scheme="http://www.code4a.com/categories/play/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hexo + github创建个人博客]]></title>
    <link href="http://www.code4a.com/2015/11/12/hexo-help-page/"/>
    <id>http://www.code4a.com/2015/11/12/hexo-help-page/</id>
    <published>2015-11-11T16:11:45.000Z</published>
    <updated>2017-10-23T09:51:29.294Z</updated>
    <content type="html"><![CDATA[<h2 id="在Mac上安装hexo打造个人博客">在Mac上安装hexo打造个人博客</h2><blockquote>
<p>我起初用的是jekyll ＋ github pages的方式建立个人博客，也是一直用的这种方式维护，<br>略微有些强迫症的我总觉得这种方式不是很满意，而且整个主题也是修改的<br><a href="http://yongyuan.name" target="_blank" rel="external">http://yongyuan.name</a>的模版，其中大部分细节自己也不是很清楚该怎么处理<br>，所以并不是很适合自己的style。后来看到啦 <strong><a href="http://www.aswifter.com/" target="_blank" rel="external">阳春面</a></strong> 的博客觉得主题和模版<br>都很棒，并且在手机上也可以自适应，非常的棒，所以就一眼相中啦，刚好这段时间，我又将自己的<a href="https://github.com/code4s" target="_blank" rel="external">github</a>的用户名改了一下<br>，导致原有的博客也无法使用，所以就直接用了 <strong><a href="http://www.aswifter.com/" target="_blank" rel="external">阳春面</a></strong> 的这种方式重新建立个人博客</p>
</blockquote>
<h4 id="问题一：安装node-js">问题一：安装node.js</h4><h5 id="根据_Hexo官方文档_进行配置遇到了一些问题，在此做些纪录避免再次遇到时还需要花费大量时间去搜索问题。">根据 <strong><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档</a></strong> 进行配置遇到了一些问题，在此做些纪录避免再次遇到时还需要花费大量时间去搜索问题。</h5><blockquote>
<p>文档中通过nvm的方式安装node.js 而安装nvm的两种方式curl和wget尝试均失败啦，第一种是下载依赖总是失败，<br>第二种wget这个前提需要安装wget，而wget也是需要提前安装一些依赖，尝试好久，还是失败。最后没办法直接<br>从 <strong><a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></strong> 网站下载pkg进行安装，此时node 和 npm 都成功安装，省去不少麻烦。</p>
</blockquote>
<h4 id="问题二：安装hexo">问题二：安装hexo</h4><h5 id="此时使用_npm_install_-g_hexo-cli_会出现权限相关的问题，根据出现的问题google，baidu给出的方案都是无法解决">此时使用 <code>npm install -g hexo-cli</code> 会出现权限相关的问题，根据出现的问题google，baidu给出的方案都是无法解决</h5><p>  最终在<strong><a href="https://github.com/hexojs/hexo/issues/913" target="_blank" rel="external">hexojs/hexo</a></strong> 中尝试成功. 使用 <code>sudo npm install -g -unsafe-perm hexo</code> 安装成功！随即将容易出现的几个点标记一下，防止下次再犯，也可帮助出现同样问题的童鞋尽快找到答案。</p>
<h3 id="所有的问题回头看看也没有什么太复杂的，万事开头难。遇到问题需要的还是耐心，有耐心终会找打解决方案！">所有的问题回头看看也没有什么太复杂的，万事开头难。遇到问题需要的还是耐心，有耐心终会找打解决方案！</h3><h4 id="使用jacman主题如何自定义多说">使用jacman主题如何自定义多说</h4><h5 id="HelloDog的文章中描述啦本地化多说embed-js，但是具体代码块的位置不是很容易找到，再次记录一下。">HelloDog的文章中描述啦本地化多说embed.js，但是具体代码块的位置不是很容易找到，再次记录一下。</h5><pre><code><span class="regexp">/.../</span>themes<span class="regexp">/jacman/</span>layout<span class="regexp">/_partial/</span>after_footer.ejs
</code></pre><p>  找到其中的多说的js代码修改即可</p>
<h3 id="参考致谢">参考致谢</h3><ol>
<li><a href="http://wuchong.me/blog/2014/11/20/how-to-use-jacman/" target="_blank" rel="external">Jark’s Blog如何使用 Jacman 主题</a></li>
<li><a href="http://wsgzao.github.io/post/hexo-jacman/" target="_blank" rel="external">HelloDog Jacman基于Pacman修改的Hexo主题</a></li>
<li><a href="http://quantumman.me/blog/setting-up-a-domain-with-gitHub-pages.html" target="_blank" rel="external">GitHub Pages 绑定来自阿里云的域名</a></li>
<li><a href="http://wsgzao.github.io/post/duoshuo/" target="_blank" rel="external">多说自定义CSS动感头像和多说评论显示User Agent的那些小事</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="在Mac上安装hexo打造个人博客">在Mac上安装hexo打造个人博客</h2><blockquote>
<p>我起初用的是jekyll ＋ github pages的方式建立个人博客，也是一直用的这种方式维护，<br>略微有些强迫症的我总觉得这种方式不是很满意]]>
    </summary>
    
      <category term="hexo" scheme="http://www.code4a.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://www.code4a.com/categories/hexo/"/>
    
  </entry>
  
</feed>
